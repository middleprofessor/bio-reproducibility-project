coef(summary(fit1))
fit2 <- lm(adulthood ~ birth + Treatment*Sex, data=exp1)
coef(summary(fit2))
# plot
fit.emm <- data.table(summary(emmeans(fit.lme, specs=c("Treatment", "Sex", "Time"))))
setnames(fit.emm, old="emmean", new="Weight")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1_long, aes(x=Treatment, y=Weight, color=Time)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(x=Treatment, y=Weight), position=pd)+
geom_errorbar(data=fit.emm, aes(x=Treatment, ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
facet_grid(.~Sex) +
NULL
gg
fit.emm <- summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1_long, aes(x=Treatment, y=emmean, color=Sex)) +
geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=emmean), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
fit.emm
fit.emm <- summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=emmean), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
names(exp1)
fit.emm <- summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=emmean), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
fit.emm <- summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
geom_point(position=pd) +
#geom_point(data=fit.emm, aes(y=emmean), position=pd)+
#geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment"))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment"))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
NULL
gg
fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment"))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
geom_line(group=Sex) +
NULL
fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment"))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex, group=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
geom_line() +
NULL
gg
fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment"))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex, group=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
geom_line(position=pd) +
NULL
gg
(fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex, group=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
geom_line(position=pd) +
NULL
gg
(fit.emm <- data.table(summary(emmeans(lm(adulthood ~ Sex*Treatment, data=exp1),
specs=c("Sex", "Treatment")))))
setnames(fit.emm, old="emmean", new="adulthood")
pd <- position_dodge(0.5)
gg <- ggplot(data=exp1, aes(x=Treatment, y=adulthood, color=Sex, group=Sex)) +
#geom_point(position=pd) +
geom_point(data=fit.emm, aes(y=adulthood), position=pd)+
geom_errorbar(data=fit.emm, aes(ymin=lower.CL, ymax=upper.CL), position=pd, width=0.2) +
geom_line(data=fit.emm, position=pd) +
NULL
gg
fn <- "table1.png"
if(knitr_path==TRUE){
image_path <- paste("../images", folder, fn, sep="/")
}else{
knitr_path <- TRUE
image_path <- paste("/images", folder, fn, sep="/")
}
knitr::include_graphics(image_path)
knitr_path <- TRUE
fn <- "table1.png"
if(knitr_path==TRUE){
image_path <- paste("../images", folder, fn, sep="/")
}else{
image_path <- paste("/images", folder, fn, sep="/")
}
knitr::include_graphics(image_path)
exp3 <- data.table(read_excel(file_path, range="K45:U45"))
colnames(exp3) <- clean_label(colnames(exp3))
exp3[, Treatment:=factor(Treatment)]
names(exp3)
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
colnames(exp3) <- clean_label(colnames(exp3))
exp3[, Treatment:=factor(Treatment)]
names(exp3)
names(exp3)
names(exp3)
exp3[,.(N=.N), by=ID]
names(exp3)
fit <- lmer(In_Nest ~ Treatment + (1|Block), data=exp3)
anova(fit)
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), data=exp3)
anova(fit)[,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), data=exp3)
anova(fit)[1,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), REML = FALSE, data=exp3)
anova(fit)[1,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE, data=exp3)
anova(fit)[1,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE, data=exp3)
anova(fit)[1,inc]
aov_4(In_Nest ~ Treatment + (1|Block), data=exp3)
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE, data=exp3)
anova(fit)[1,inc]
aov_4(In_Nest ~ Treatment + (Treatment|Block), data=exp3)
inc <- c("F value", "DenDF", "Pr(>F)")
fit <- lmer(In_Nest ~ Treatment + (Treatment|Block), REML = TRUE, data=exp3)
anova(fit)[1,inc]
aov_4(In_Nest ~ Treatment + (1|Block), data=exp3)
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (Treatment|Block), REML = TRUE, data=exp3))[1,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE,
data=exp3))[1,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block,
data=exp3))[1,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block,
data=exp3))[1,inc]
lme(In_Nest ~ Treatment, random = ~ 1|Block,
data=exp3)
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block,
data=exp3))
anova(lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE,
data=exp3))[1,inc]
?lmer
?lme
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block), REML = FALSE,
data=exp3))[1,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block), REML = TRUE,
data=exp3))[1,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
?anova.lmerModLmerTest
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block), ddf="lme4",
data=exp3))[1,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3), ddf="lme4")[1,inc]
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3), ddf="lme4")
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3), ddf="lme4")
#anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
#           data=exp3))
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3))
#anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
#           data=exp3))
inc <- c("F value", "DenDF", "Pr(>F)")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3))
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
inc <- c("F-value", "denDF", "p-value")
anova(lmer(In_Nest ~ Treatment + (1|Block),
data=exp3))
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,inc]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,2-4]
dim(anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3)))
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[,2]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[,2:4]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[,2:3]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[,3]
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
names(exp3)
anova(lme(In_Nest ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Nursing ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Licking_Pups ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Nest_Building ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Eating._Drinking ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Grooming ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Active ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
anova(lme(Resting ~ Treatment, random = ~ 1|Block, method="ML",
data=exp3))[2,]
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
names(exp3)
# function to remove spaces and units from column labels
# Jeff Walker
# November 12, 2018
clean_label <- function(x){
# clean units in parentheses and units with space in front of parenthesis
x <- gsub(" \\s*\\([^\\)]+\\)","", x)
# clean units in parentheses and units without space in front of parenthesis
x <- gsub("\\s*\\([^\\)]+\\)","", x)
#remove spaces
x <- gsub(" ", "_", x)
# replace hash with "n"
x <- gsub("#", "n_", x)
# replace % with "perc"
x <- gsub("%", "perc_", x)
# get rid of any double "__"
x <- gsub("__", "_", x)
# replace hyphens
x <- gsub("-", "_", x)
# replace forward slash
x <- gsub("/ ", ".", x)
# replace forward slash
x <- gsub("/", ".", x)
return(x)
}
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
colnames(exp3) <- clean_label(colnames(exp3))
exp3[, Treatment:=factor(Treatment)]
names(exp3)
# function to remove spaces and units from column labels
# Jeff Walker
# November 12, 2018
clean_label <- function(x){
# clean units in parentheses and units with space in front of parenthesis
x <- gsub(" \\s*\\([^\\)]+\\)","", x)
# clean units in parentheses and units without space in front of parenthesis
x <- gsub("\\s*\\([^\\)]+\\)","", x)
#remove spaces
x <- gsub(" ", "_", x)
# replace hash with "n"
x <- gsub("#", "n_", x)
# replace % with "perc"
x <- gsub("%", "perc_", x)
# get rid of any double "__"
x <- gsub("__", "_", x)
# replace hyphens
x <- gsub("-", "_", x)
# replace forward slash
x <- gsub("/_", ".", x)
# replace forward slash
x <- gsub("/", ".", x)
return(x)
}
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
colnames(exp3) <- clean_label(colnames(exp3))
exp3[, Treatment:=factor(Treatment)]
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
exp3 <- data.table(read_excel(file_path, range="K1:U45"))
colnames(exp3) <- clean_label(colnames(exp3))
exp3[, Treatment:=factor(Treatment)]
names(exp3)
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
for(y in y_list){
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
p1 <- anova(lme(fixed_i, random = ~ 1|Block, method="ML",
data=exp3))[2,]
}
p1
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
part1 <- data.table(NULL)
for(y in y_list){
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
part1 <- rbind(part1,
data.table(Response=y,
anova(lme(fixed_i, random = ~ 1|Block,
method="ML", data=exp3))[2,]))
}
part1
?count
y <- y_list[1]
y
mean(exp3[Treatment=="MC", get(y)])
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
part1 <- data.table(NULL)
exp3[, one:=1] # used for getting N in each level
for(y in y_list){
n.mc <- sum(exp3[Treatment=="MC" & !is.na(y), one])
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
part1 <- rbind(part1,
data.table(Response=y,
anova(lme(fixed_i, random = ~ 1|Block,
method="ML", data=exp3))[2,]),
Mean.MC=mean(exp3[Treatment=="MC", get(y)]),
SE.MC=sd(exp3[Treatment=="MC", get(y)]/sqrt(n.mc))
)
}
exp3[, .(mean(y_list)), by=Treatment]
exp3[, .(mean(y_list)), by=Treatment]
exp3[, .(mean(In_Nest)), by=Treatment]
levels(exp3$Treatment)
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
part1 <- data.table(NULL)
exp3[, one:=1] # used for getting N in each level
for(y in y_list){
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
part1 <- rbind(part1,
data.table(Response=y,
anova(lme(fixed_i, random = ~ 1|Block,
method="ML", data=exp3))[2,],
Mean.MC=mean(exp3[Treatment=="MC", get(y)]),
SE.MC=sd(exp3[Treatment=="MC", get(y)]),
Mean.LBE=mean(exp3[Treatment=="LBE", get(y)]),
SE.LBE=sd(exp3[Treatment=="LBE", get(y)])
))
}
part1
sum(exp3[Treatment=="MC" & !is.na(get(y)), one])
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
my_table <- data.table(NULL)
exp3[, one:=1] # used for getting N in each level
for(y in y_list){
n.mc <- sum(exp3[Treatment=="MC" & !is.na(get(y)), one])
n.lbe <- sum(exp3[Treatment=="LBE" & !is.na(get(y)), one])
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
my_table <- rbind(my_table,
data.table(Response=y,
anova(lme(fixed_i, random = ~ 1|Block,
method="ML", data=exp3))[2,],
Mean.MC=mean(exp3[Treatment=="MC", get(y)]),
SE.MC=sd(exp3[Treatment=="MC", get(y)])/sqrt(n.mc),
Mean.LBE=mean(exp3[Treatment=="LBE", get(y)]),
SE.LBE=sd(exp3[Treatment=="LBE", get(y)])/sqrt(n.lbe)
))
}
my_table
knitr::kable(my_table, digits=c(NA,0,0,2,3,2,2))
knitr::kable(my_table, digits=c(NA,0,0,2,3,2,2,2,2))
knitr::kable(my_table, digits=c(NA,0,0,2,3,2,2,2,2))
y
y
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
fixed_i
aov_4(fixed_i + (1|Block), data=exp3))
aov_4(fixed_i + (1|Block), data=exp3)
head(exp3)
exp3[, Block:=factor(Block)]
aov_4(fixed_i + (1|Block), data=exp3)
y
aov_4(Resting ~ Treatment + (1|Block), data=exp3)
aov_4(Resting ~ Treatment + (1|Block:Treatment), data=exp3)
exp3$Block
head(exp3)
head(exp3)
fit.aov_4 <- aov_4(Resting ~ Treatment + (1|Block/ID), data=exp3)
?aov_ez
aov_ez("ID", "Resting", exp3, between=c("Treatment"), within="Block")
exp3[ID==164]
head(exp3)
exp3[,.(N=.N), by=ID]
exp3[, myID:=1:.N]
exp3$myID
exp3[, myID:=factor(1:.N)]
aov_ez("myID", "Resting", exp3, between=c("Treatment"), within="Block")
aov_4(Resting ~ Treatment + (1|Block/ID), data=exp3)
aov_4(Resting ~ Treatment + (1|Block:ID), data=exp3)
exp3[ID==1,]
exp3
aov_4(Resting ~ Treatment + (1|Block:myID), data=exp3)
aov_4(Resting ~ Treatment + (1|Block), data=exp3)
aov_4(Resting ~ Treatment + (Treatment|Block), data=exp3)
(fit.aov_4 <- aov_4(Resting ~ Treatment + (Treatment|Block), data=exp3))
y_list <- c("In_Nest", "Nursing", "Licking_Pups", "Nest_Building", "Eating.Drinking", "Grooming", "Active", "Resting")
my_table <- data.table(NULL)
exp3[, one:=1] # used for getting N in each level
exp3[, myID:=factor(1:.N)] # ID 164 is present twice
for(y in y_list){
n.mc <- sum(exp3[Treatment=="MC" & !is.na(get(y)), one])
n.lbe <- sum(exp3[Treatment=="LBE" & !is.na(get(y)), one])
fixed_i <- formula(paste(y, "Treatment", sep=" ~ "))
my_table <- rbind(my_table,
data.table(Response=y,
anova(lme(fixed_i, random = ~ 1|Block,
method="ML", data=exp3))[2,],
Mean.MC=mean(exp3[Treatment=="MC", get(y)]),
SE.MC=sd(exp3[Treatment=="MC", get(y)])/sqrt(n.mc),
Mean.LBE=mean(exp3[Treatment=="LBE", get(y)]),
SE.LBE=sd(exp3[Treatment=="LBE", get(y)])/sqrt(n.lbe)
))
}
# table is printed below the reported table
knitr::kable(my_table, digits=c(NA,0,0,2,3,2,2,2,2))
exp4 <- data.table(read_excel(file_path, range="V1:Z60"))
colnames(exp4) <- clean_label(colnames(exp4))
exp4[, Treatment:=factor(Treatment)]
head(exp4)
y
aov_car(Resting ~ Treatment + Error(Block/(Treatment)), exp3)
exp3
aov_car(Resting ~ Treatment + Block + Error(1/Block), exp3)
aov_car(Resting ~ Treatment*Block + Error(1/Block), exp3)
aov_4(Resting ~ Treatment*Block + (Treatment/Block), exp3)
aov_4(Resting ~ Treatment*Block + (1/Block), exp3)
lmer(Resting ~ Treatment*Block + (1/Block), exp3)
?lmer
lmer(Resting ~ Treatment*Block + (1|Block), exp3)
lmer(Resting ~ Treatment*Block + (Treatment|Block), exp3)
aov_4(Resting ~ Treatment*Block + (Treatment|Block), exp3)
aov_4(Resting ~ Treatment + Block + (1|Block), exp3)
aov_4(Resting ~ Treatment*Block + (1|Block), exp3)
exp4
head(exp4)
?melt
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name=Time, value.name=GCM)
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name="Time", value.name="GCM")
head(exp4_long)
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name="Time", value.name="GCM")
(fit.aov_4 <- aov_4(GCM ~ Treatment*Time + (Time|ID), data=exp1_long))
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name="Time", value.name="GCM")
(fit.aov_4 <- aov_4(GCM ~ Treatment*Time + (Time|ID), data=exp4_long))
?aov_4
(fit.aov_4 <- aov_4(GCM ~ Treatment*Time + (Time|ID), data=exp4_long), correction="none")
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name="Time", value.name="GCM")
(fit.aov_4 <- aov_4(GCM ~ Treatment*Time + (Time|ID), data=exp4_long, correction="none"))
# melt wide to long
exp4_long <- melt(exp4, id.vars=c("ID", "Treatment"), variable.name="Time", value.name="GCM")
(fit.aov_4 <- aov_4(GCM ~ Treatment*Time + (Time|ID), data=exp4_long, anova_table = list(correction = "none")))
