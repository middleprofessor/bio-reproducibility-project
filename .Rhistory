growth <- dt.table_S2[Treatment=='Control', .(growth=mean(Offspring.Weight.2 - Offspring.Weight.1, na.rm=TRUE)), by=.(as.factor(Raw.Litter.Size))]
growth[, augmented:=growth+added_Growth]
growth[, percent_augmented:=added_Growth/growth*100]
growth
final_weight <- dt.table_S2[Treatment=='Control', .(weight=mean(Offspring.Weight.2, na.rm=TRUE)), by=.(Raw.Litter.Size)]
final_weight[, augmented:=weight+added_Growth]
final_weight[, percent_augmented:=added_Growth/weight*100]
final_weight
growth
blogdown:::serve_site()
?lmerTest
fit <- lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")
coefficients(summary(fit)) # what is "corrected about FCM?"
refit <- lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")
anova(fit, refit)
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~  scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Current.Year.Cones + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~  scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Current.Year.Cones + scaled.parturition.date + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Current.Year.Cones + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
coefficients(summary(lmer(Offspring.Growth.Rate ~ Previous.Year.Cones + Current.Year.Cones + scaled.litter.size + Corrected.FCM.ng.g.dry + (1|Mom.Squirrel.ID), data=dt.table_S5, na.action="na.exclude")))["Corrected.FCM.ng.g.dry",]
fn <- 'Table S6 Results - neonate mass and growth rate.csv'
file_path <- paste(base_path, "data/", folder, "/",fn, sep="")
dt.table_S6 <- data.table(read.table(file_path, sep=',', header=TRUE))
fn <- 'Table S6 Results - neonate mass and growth rate.csv'
file_path <- paste(base_path, "data/", folder, "/",fn, sep="")
dt.table_S6 <- data.table(read.table(file_path, sep=',', header=TRUE))
names(dt.table_S6)
fit <- lmer(Offspring.Growth.Rate ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")
coefficients(summary(fit)) # what is "corrected about FCM?"
fit <- lmer(Offspring.Growth.Rate ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")
coefficients(summary(fit)) # what is "corrected about FCM?"
refit <- lmer(Offspring.Growth.Rate ~ Offspring.Weight.1+ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")
coefficients(summary(refit)) # what is "corrected about FCM?"
qplot(x=Treatment, y=Offspring.Weight.1, data=dt.table_S6) +
geom_point()
coefficients(summary(lmer(Offspring.Weight.1 + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
names(dt.table_S6)
coefficients(summary(lmer(Offspring.Weight.1 ~ Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
qplot(x=Treatment, y=Offspring.Weight.2, data=dt.table_S6) +
geom_point()
dt.table_S6[Offspring.Weight.2<20,]
head(dt.table_S6[Offspring.Weight.2<20,])
which(!is.na(dt.table_S6[, Offspring.Growth.Rate]))
which(!is.na(dt.table_S6[, Offspring.Growth.Rate]))
dt.table_S6[1:20,]
inc <- which(!is.na(dt.table_S6[, Offspring.Growth.Rate]))
dt.table_S6 <- dt.table_S6[inc, ]
dim(dt.table_S6)
fit <- lmer(Offspring.Growth.Rate ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")
coefficients(summary(fit)) # what is "corrected about FCM?"
qplot(x=Treatment, y=Offspring.Weight.1, data=dt.table_S6) +
geom_point()
coefficients(summary(lmer(Offspring.Weight.1 ~ Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
qplot(x=Treatment, y=Offspring.Weight.2, data=dt.table_S6) +
geom_point()
qplot(x=Treatment, y=Offspring.Weight.2, color=Litter.ID, data=dt.table_S6) +
geom_point()
qplot(x=Treatment, y=Offspring.Weight.2, color=Litter.ID, data=dt.table_S6) +
geom_point()
qplot(x=Treatment, y=Offspring.Weight.1, color=Litter.ID, data=dt.table_S6) +
geom_point()
coefficients(summary(refit)) # what is "corrected about FCM?"
dt <- dt.table_S6[, .(mean(Offspring.Growth.Rate), mean(Offspring.Weight.1), mean(Scaled.Litter.Size)), by=.(Treatment, Litter.ID)]
refit <- lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment)
dt <- dt.table_S6[, .(mean(Offspring.Growth.Rate), mean(Offspring.Weight.1), mean(Scaled.Litter.Size)), by=.(Treatment, Litter.ID)]
refit <- lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment)
refit <- lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment, data=dt)
dt <- dt.table_S6[, .(Offspring.Growth.Rate=mean(Offspring.Growth.Rate), Offspring.Weight.1=mean(Offspring.Weight.1), Scaled.Litter.Size=mean(Scaled.Litter.Size)), by=.(Treatment, Litter.ID)]
refit <- lm(Offspring.Growth.Rate ~ Scaled.Litter.Size + Offspring.Weight.1 + Treatment, data=dt)
refit
coefficients(summary(lm(Offspring.Growth.Rate ~ Scaled.Litter.Size + Offspring.Weight.1 + Treatment, data=dt)))
dt
coefficients(summary(lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment, data=dt)))
coefficients(summary(lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment, data=dt)))
coefficients(summary(lm(Offspring.Growth.Rate ~ Offspring.Weight.1 + Treatment, data=dt)))
coefficients(summary(lmer(Offspring.Weight.1 ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
qplot(x=Treatment, y=Offspring.Weight.1, color=Litter.ID, data=dt.table_S6) +
geom_point()
coefficients(summary(lmer(Offspring.Weight.1 ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
qplot(x=Treatment, y=Offspring.Weight.2, color=Litter.ID, data=dt.table_S6) +
geom_point()
coefficients(summary(lmer(Offspring.Weight.2 ~ Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")))
refit <- lmer(Offspring.Growth.Rate ~ Offspring.Weight.1 + Scaled.Litter.Size + Treatment + (1|Litter.ID), data=dt.table_S6, na.action="na.exclude")
coefficients(summary(refit)) # what is "corrected about FCM?"
blogdown:::new_post_addin()
90*.2 + 50*.8
90*.2 + 50*.8
90*.2 + 70*.8
90*.2 + 85*.8
.9*8
100*.2 + 90*.8
100*.2 + 50*.8
6*.9
6*.8
6*0.85
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
getwd()
getwd()
getwd()
blogdown:::serve_site()
list.files(getwd(), all.files=TRUE)
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
library(readxl)
library(ggplot2)
library(data.table)
library(lme4)
library(lmerTest)
?read_excel
base_path <- "content/"
folder <- '2018-05-07-data-from-success-despite-the-stress-violet-green-swallows-increase-glucocorticoids-and-maintain-reproductive-output-despite-experimental-increases-in-flight-costs'
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, fn, sep='/')
bird <- read_excel(file_path)
getwd()
file_path
base_bath
base_path
file_path <- paste(base_path, folder, fn, sep='/')
bird <- read_excel(file_path)
bird <- read_excel(file_path, sheet = 'Tab3 "a8"')
file_path
base_path <- "content"
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, folder, fn, sep='/')
bird <- read_excel(file_path, sheet = 'Tab3 "a8"')
file_path
folder <- '2018-05-07-data-from-success-despite-the-stress'
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, folder, fn, sep='/')
bird <- read_excel(file_path, sheet = 'Tab3 "a8"')
file_path
base_path <- "content/data"
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, folder, fn, sep='/')
bird <- read_excel(file_path, sheet = 'Tab3 "a8"')
bird
bird <- data.table(read_excel(file_path, sheet = 'Tab3 "a8"'))
bird
?dcast
dcast(bird, Year + Treatment + Nestling_Age + Time + DOY_Initiation + day3mass ~ BandNo)
dcast(bird,  BandNo ~ Year + Treatment + Nestling_Age + Time + DOY_Initiation + day3mass)
dcast(bird,  Year + Treatment + BandNo + Time + DOY_Initiation + day3mass ~ Nestling_Age, value.var=Mass)
names(bird)
dcast(bird,  Year + Treatment + BandNo + Time + DOY_Initiation + day3mass ~ Nestling_Age, value.var='Mass')
setnames(bird_wide, old=c('3', '13'), new=c('Mass_d3', 'Mass_d13'))
bird_wide <- dcast(bird,  Year + Treatment + BandNo + Time + DOY_Initiation + day3mass ~ Nestling_Age, value.var='Mass')
setnames(bird_wide, old=c('3', '13'), new=c('Mass_d3', 'Mass_d13'))
bird_wide[, dMass:=Mass_d13 - Mass_d3]
bird[, Treatment]
bird[, Treatment:=factor(Treatment)]
levels(bird$Treatment)
bird_wide <- dcast(bird,  Year + Treatment + BandNo + Time + DOY_Initiation + day3mass ~ Nestling_Age, value.var='Mass')
setnames(bird_wide, old=c('3', '13'), new=c('Mass_d3', 'Mass_d13'))
# change in mass
bird_wide[, dMass:=Mass_d13 - Mass_d3]
fit <- lm(dMass ~ Treatment, data=bird)
fit2 <- lm(dMass ~ Mass_d3 + Treatment, data=bird)
coefficients(summary(fit))
coefficients(summary(fit2))
bird_wide[, dMass:=Mass_d13 - Mass_d3]
fit <- lm(dMass ~ Treatment, data=bird)
fit2 <- lm(dMass ~ Mass_d3 + Treatment, data=bird)
coefficients(summary(fit))
coefficients(summary(fit2))
fit <- lm(dMass ~ Treatment, data=bird_wide)
fit2 <- lm(dMass ~ Mass_d3 + Treatment, data=bird_wide)
coefficients(summary(fit))
coefficients(summary(fit2))
fit <- lm(dMass ~ Treatment, data=bird_wide)
bird_wide$Treatment
bird_wide
head_bird
head(bird)
dcast(bird, Nestling_Age ~ Year + Treatment + BandNo + Time + DOY_Initiation + day3mass, value.var='Mass')
dcast(bird,  Year + Treatment + BandNo + Time + DOY_Initiation + day3mass ~ Nestling_Age, value.var='Mass')
head(bird)
bird_wide[BandNo=="2640-80001"]
bird_wide <- dcast(bird, Nestling_Age ~ Year + Treatment + BandNo + Time + DOY_Initiation + day3mass, value.var=c('Mass','Time'))
bird_wide
bird_wide <- dcast(bird,  Year + Treatment + BandNo + DOY_Initiation + day3mass ~ Nestling_Age, value.var=c('Mass','Time'))
bird_wide
setnames(bird_wide, old=c('3', '13'), new=c('Mass_d3', 'Mass_d13'))
# change in mass
bird_wide[, dMass:=Mass_d13 - Mass_3]
fit <- lm(dMass ~ Treatment, data=bird_wide)
fit2 <- lm(dMass ~ Mass_d3 + Treatment, data=bird_wide)
coefficients(summary(fit))
coefficients(summary(fit2))
bird_wide[, dMass:=Mass_13 - Mass_3]
fit <- lm(dMass ~ Treatment, data=bird_wide)
fit2 <- lm(dMass ~ Mass_d3 + Treatment, data=bird_wide)
coefficients(summary(fit))
coefficients(summary(fit2))
fit <- lm(dMass ~ Treatment, data=bird_wide)
fit2 <- lm(dMass ~ Mass_3 + Treatment, data=bird_wide)
coefficients(summary(fit))
coefficients(summary(fit2))
library(readxl)
library(ggplot2)
library(data.table)
library(lme4)
library(lmerTest)
base_path <- "../data" #knitr
#base_path <- "content/data"  # console
folder <- '2018-05-07-data-from-success-despite-the-stress'
base_path <- "content/data"
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, folder, fn, sep='/')
bird <- data.table(read_excel(file_path, sheet = 'Tab3 "a8"'))
bird[, Treatment:=factor(Treatment)]
bird_wide <- dcast(bird,  Year + Treatment + BandNo + DOY_Initiation + day3mass ~ Nestling_Age, value.var=c('Mass','Time'))
bird_wide[, dMass:=Mass_13 - Mass_3]
bird
Nestling_Age
fit <- lm(Mass ~ Treatment*Nestling_Age, data=bird)
anova(fit)
names(bird)
p1 <- rnorm(n = 1000, mean = 45, sd = 5)
## Outcome predictor 2 associated with predictor 1
p2 <- rnorm(n = 1000, mean = 120, sd = 5) + (p1/7)*runif(n = 1000)
## Randomly assign exposure
e <- rbinom(n = 1000, size = 1, prob = 0.5)
## Set true model parameters
beta0 <-  10
beta1 <- -0.5
beta2 <-  0.7
beta3 <-  0.9
## Continuous outcome under the true model
Ycont <- beta0 + beta1*e + beta2*p1 + beta3*p2 + rnorm(n = 1000, mean = 0, sd = 2)
## Dichotomized outcome variable Ydich
Ydich <- as.numeric(Ycont > median(Ycont))
library(ggplot2)
library(data.table)
qplot(Ycont)
qplot(Ydich)
qplot(x=beta3, y=Ydich)
qplot(x=p1, y=Ydich)
cor(p1, p2)
ocr(e(p1))
cor(e,p1)
cor(e,p2)
Simulate <- function() {
## Outcome predictor 1
p1 <- rnorm(n = 1000, mean = 45, sd = 5)
## Outcome predictor 2 associated with predictor 1
p2 <- rnorm(n = 1000, mean = 120, sd = 5) + (p1/7)*runif(n = 1000)
## Randomly assign exposure
e <- rbinom(n = 1000, size = 1, prob = 0.5)
## Set true model parameters
beta0 <-  10
beta1 <- -0.5
beta2 <-  0.7
beta3 <-  0.9
## Continuous outcome under the true model
Ycont <- beta0 + beta1*e + beta2*p1 + beta3*p2 + rnorm(n = 1000, mean = 0, sd = 2)
## Dichotomized outcome variable Ydich
### this is a very deterministic mapping from continous outcome to dichotomous but maybe the continuos should be seen not as "performance" but just as a step to getting Ydich
Ydich <- as.numeric(Ycont > median(Ycont))
## Identity link: Conditional effect of exposure
identity_conditional_coef_e <-
glm(Ycont ~ e + p1 + p2, family = gaussian(link = "identity")) %>%
coef %>% extract("e")
## Identity link: Marginal effect of exposure (valid estimate as the exposure is randomized)
identity_marginal_coef_e <-
glm(Ycont ~ e, family = gaussian(link = "identity")) %>%
coef %>% extract("e")
## Logit link: Conditional effect of exposure
logit_conditional_coef_e <-
glm(Ydich ~ e + p1 + p2, family = binomial(link = "logit")) %>%
coef %>% extract("e")
## Logit link: Marginal effect of exposure (valid estimate as the exposure is randomized)
logit_marginal_coef_e <-
glm(Ydich ~ e, family = binomial(link = "logit")) %>%
coef %>% extract("e")
## Log link: Conditional effect of exposure
log_conditional_coef_e <-
glm(Ydich ~ e + p1 + p2, family = poisson(link = "log")) %>%
coef %>% extract("e")
## Log link: Marginal effect of exposure (valid estimate as the exposure is randomized)
log_marginal_coef_e <-
glm(Ydich ~ e, family = poisson(link = "log")) %>%
coef %>% extract("e")
##
c(identity_marginal    = identity_marginal_coef_e,
identity_conditional = identity_conditional_coef_e,
logit_marginal       = logit_marginal_coef_e,
logit_conditional    = logit_conditional_coef_e,
log_marginal         = log_marginal_coef_e,
log_conditional      = log_conditional_coef_e)
}
resSims <- sapply(1:1000, function(x){Simulate()})
library(magrittr)
resSims <- sapply(1:1000, function(x){Simulate()})
resSims
dim(resSims)
head(resSims)
head(resSims)
resSims[,1:5]
resSims1 <- copy(resSims)
resSims%>%
t %>% data.frame %>%
melt(data          = .,
id.vars       = NULL,
variable.name = "variable",
value.name    = "value")
dim(resSims)
resSims[,1:5]
resSims <- sapply(1:1000, function(x){Simulate()}) %>%
t %>% data.frame %>%
melt(data          = .,
id.vars       = NULL,
variable.name = "variable",
value.name    = "value")
resSims[,1:5]
dim(resSims)
head(resSims)
ggplot(data = resSims, mapping = aes(x = variable, y = value)) +
layer(geom = "boxplot") +
theme_bw() + theme(legend.key = element_blank(),
axis.text.x = element_text(angle = 60, vjust = 0.5))
ggplot(data = resSims, mapping = aes(x = variable, y = value)) +
layer(geom = "boxplot")
ggplot(data = resSims, mapping = aes(x = variable, y = value)) +
geom_boxplot()
pi^2/3
n <- 10^3
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
head(s1)
s2 <- as.numeric(y2>0)
var(s1)
var(s2)
?extract
fit <- glm(s1 ~ y1, family = binomial(link = "logit"))
coefficients(summary(fit))
extract(coef(fit))
coef(fit)
fit <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
n <- 10^5
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
n <- 10^5
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
n <- 10^5
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
n <- 10^5
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit))
fit2 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
sd(residuals(fit1))
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
sd(residuals(fit1))
sd(residuals(fit2))
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
sd(residuals(fit1))
sd(residuals(fit2))
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
sd(residuals(fit1))
sd(residuals(fit2))
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
sd(residuals(fit1))
sd(residuals(fit2))
exp(1)
exp(1.118)
?residuals.glm
sd(residuals(fit1, type=response))
sd(residuals(fit2, type=response))
sd(residuals(fit1, type='response'))
sd(residuals(fit2, type='response'))
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit1))
coefficients(fit1)*sd(residuals(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients(summary(fit2))
coefficients(fit2)*sd(residuals(fit2))
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients((fit1))
coefficients(fit1)*sd(residuals(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
coefficients((fit2))
coefficients(fit2)*sd(residuals(fit2))
yhat <- predict(fit1)
qplot(yhat)
n <- 10^5
sigma1 <- 1
sigma2 <- 2
b1 <- 1
x <- rnorm(n)
e <- rnorm(n)
propensity <- b1*x
y1 <- propensity + e*sigma1
y2 <- propensity + e*sigma2
s1 <- as.numeric(y1>0)
s2 <- as.numeric(y2>0)
fit1 <- glm(s1 ~ x, family = binomial(link = "logit"))
coefficients((fit1))
coefficients(fit1)*sd(residuals(fit1))
fit2 <- glm(s2 ~ x, family = binomial(link = "logit"))
yhat <- predict(fit1)
yhat <- predict(fit1, type='response')
qplot(yhat)
blogdown:::serve_site()
