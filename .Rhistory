value.name="count")
return(dt_long)
}
# phage
sheet_i <- "Phage"
range_i <- "A3:X34" # ignores labels as the first two columns have none
phage <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
phage_long <- pre_process_data(phage)
as.character(1:20)
pre_process_data <- function(dt_in){
# takes the raw imported sheet and process it for analysis
# output is long format
dt <- copy(dt_in)
# set column names
col_labels <- c("native", "id", "week_0", "week_0.5", paste("week", 1:20, sep="_"))
col_labels <- c("native", "id", "0", "0.5", as.character(1:20))
setnames(dt, old=colnames(dt), new=col_labels)
# add Nitrogen column by guessing
dt[, N:=rep(rep(c("N_lim", "N_rich"), each=4), 2)]
# cull 99.5% rows
dt <- dt[native!=99.5]
# make column of 1 - native for frequency of phage-resistant Nodularia
dt[, resistant:=1-native]
# make resistant and Nitrogen factors
dt[, resistant:=factor(resistant)]
dt[, N:=factor(N)]
# limit to weeks 2,4 6, 8, 12, 20
ycols <- paste("week", c(2, 4, 6, 8, 12, 20), sep="_")
ycols <- as.character(c(2, 4, 6, 8, 12, 20))
dt_long <- melt(dt,
id.vars=c("resistant", "id", "N"),
measure.vars=ycols,
variable.name="week",
value.name="count")
return(dt_long)
}
# phage
sheet_i <- "Phage"
range_i <- "A3:X34" # ignores labels as the first two columns have none
phage <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
phage_long <- pre_process_data(phage)
sheet_i <- "Rotifers"
range_i <- "A5:X36" # skip double header and read only to week 20
rotifers <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
rotifers_long <- pre_process_data(rotifers)
sheet_i <- "Chlorella"
range_i <- "A4:X35" # skip double header and read only to week 20
# add first two columns as in other three
chlorella <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
chlorella_long <- pre_process_data(chlorella)
sheet_i <- "Nodularia"
range_i <- "A5:V36" # skip double header and read only to week 20
nodularia_part <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
# change colnames so not duplicate
colnames(nodularia_part) <- paste("X",1:22,sep="")
nodularia <- cbind(phage[, 1:2], nodularia_part)
nodularia_long <- pre_process_data(nodularia)
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id"
summary(aov(count ~ N + Error(id), phage_long))$"Error: id"
summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id"
summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1 <- unlist(summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id")[stats]
aov2 <- unlist(summary(aov(count ~ N + Error(id), phage_long))$"Error: id")[stats]
aov3 <- unlist(summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id")[stats]
aov4 <- unlist(summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id")[stats]
table_1 <- data.table(component=c("Nodularia", "Phage", "Chlorella", "Rotifer"),
rbind(aov1, aov2, aov3, aov4))
setnames(table_1, old=colnames(table_1), new=c("component", "DDF", "F", "p"))
knitr::kable(table_1, digits=c(NA, 0, 3, 3))
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
head(dt)
str(dt)
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
str(dt)
dt$week
head(dt)
nodularia_long
pre_process_data <- function(dt_in){
# takes the raw imported sheet and process it for analysis
# output is long format
dt <- copy(dt_in)
# set column names
col_labels <- c("native", "id", "week_0", "week_0.5", paste("week", 1:20, sep="_"))
col_labels <- c("native", "id", "0", "0.5", as.character(1:20))
setnames(dt, old=colnames(dt), new=col_labels)
# add Nitrogen column by guessing
dt[, N:=rep(rep(c("N_lim", "N_rich"), each=4), 2)]
# cull 99.5% rows
dt <- dt[native!=99.5]
# make column of 1 - native for frequency of phage-resistant Nodularia
dt[, resistant:=100-native]
# make resistant and Nitrogen factors
dt[, resistant:=factor(resistant)]
dt[, N:=factor(N)]
# limit to weeks 2,4 6, 8, 12, 20
ycols <- paste("week", c(2, 4, 6, 8, 12, 20), sep="_")
ycols <- as.character(c(2, 4, 6, 8, 12, 20))
dt_long <- melt(dt,
id.vars=c("resistant", "id", "N"),
measure.vars=ycols,
variable.name="week",
value.name="count")
return(dt_long)
}
# phage
sheet_i <- "Phage"
range_i <- "A3:X34" # ignores labels as the first two columns have none
phage <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
phage_long <- pre_process_data(phage)
sheet_i <- "Rotifers"
range_i <- "A5:X36" # skip double header and read only to week 20
rotifers <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
rotifers_long <- pre_process_data(rotifers)
sheet_i <- "Chlorella"
range_i <- "A4:X35" # skip double header and read only to week 20
# add first two columns as in other three
chlorella <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
chlorella_long <- pre_process_data(chlorella)
sheet_i <- "Nodularia"
range_i <- "A5:V36" # skip double header and read only to week 20
nodularia_part <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
# change colnames so not duplicate
colnames(nodularia_part) <- paste("X",1:22,sep="")
nodularia <- cbind(phage[, 1:2], nodularia_part)
nodularia_long <- pre_process_data(nodularia)
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id"
summary(aov(count ~ N + Error(id), phage_long))$"Error: id"
summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id"
summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1 <- unlist(summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id")[stats]
aov2 <- unlist(summary(aov(count ~ N + Error(id), phage_long))$"Error: id")[stats]
aov3 <- unlist(summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id")[stats]
aov4 <- unlist(summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id")[stats]
table_1 <- data.table(component=c("Nodularia", "Phage", "Chlorella", "Rotifer"),
rbind(aov1, aov2, aov3, aov4))
setnames(table_1, old=colnames(table_1), new=c("component", "DDF", "F", "p"))
knitr::kable(table_1, digits=c(NA, 0, 3, 3))
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_lim"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_rich"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), phage_long[N=="N_lim"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), phage_long[N=="N_rich"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_lim"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_rich"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_lim"]))$"Error: id"
summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_rich"]))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1a <- unlist(summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_lim"]))$"Error: id")[stats]
aov2a <- unlist(summary(aov(count ~ resistant + Error(id), phage_long[N=="N_lim"]))$"Error: id")[stats]
aov3a <- unlist(summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_lim"]))$"Error: id")[stats]
aov4a <- unlist(summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_lim"]))$"Error: id")[stats]
aov1b <- unlist(summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_rich"]))$"Error: id")[stats]
aov2b <- unlist(summary(aov(count ~ resistant + Error(id), phage_long[N=="N_rich"]))$"Error: id")[stats]
aov3b <- unlist(summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_rich"]))$"Error: id")[stats]
aov4b <- unlist(summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_rich"]))$"Error: id")[stats]
table_2 <- data.table(component=rep(c("Nodularia", "Phage", "Chlorella", "Rotifer"), each=2),
treatment=rep(c("N_lim", "N_rich"), 2),
rbind(aov1a, aov1b, aov2a, aov2b, aov3a, aov3b, aov4a, aov4b))
setnames(table_2, old=colnames(table_2), new=c("component", "treatment", "DDF", "F", "p"))
knitr::kable(table_2, digits=c(NA, NA, 0, 2, 5))
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
ggscatterplot(x="week", y="count", color="component")
library(ggpubr)
head(dt)
str(dt)
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
ggscatterplot(x="week", y="count", color="component")
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
ggscatter(x="week", y="count", color="component")
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
ggscatter(x="week", y="count", color="component", data=dt)
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count)), by=.(component, resistant, N, week)]
raw_means
?mean
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
raw_means
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Nodularia", phage_long),
data.table(component="Nodularia", chlorella_long),
data.table(component="Nodularia", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
facet_grid(component~N)
NULL
gg
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
facet_grid(component~N)
NULL
gg
?facet_grid
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
facet_grid(component~N, scales="free")
NULL
gg
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
facet_grid(component~N, scales="free") +
NULL
gg
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)]
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
facet_grid(component~N, scales="free") +
NULL
gg
dt
raw_means
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
facet_grid(component~N, scales="free") +
NULL
gg
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line(colors=c("black", "green", "red")) +
scale_y_continuous(trans='log10') +
facet_grid(component~N, scales="free") +
NULL
gg
?geom_line
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
scale_fill_manual(values=c("black", "green", "red"))
facet_grid(component~N, scales="free") +
NULL
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
scale_fill_manual(values=c("black", "green", "red")) +
facet_grid(component~N, scales="free") +
NULL
gg
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
scale_color_manual(values=c("black", "green", "red")) +
facet_grid(component~N, scales="free") +
NULL
gg
pre_process_data <- function(dt_in){
# takes the raw imported sheet and process it for analysis
# output is long format
dt <- copy(dt_in)
# set column names
col_labels <- c("native", "id", "0", "0.5", as.character(1:20))
setnames(dt, old=colnames(dt), new=col_labels)
# add Nitrogen column by guessing
dt[, N:=rep(rep(c("N_lim", "N_rich"), each=4), 2)]
# cull 99.5% rows
dt <- dt[native!=99.5]
# make column of 1 - native for frequency of phage-resistant Nodularia
dt[, resistant:=100-native]
# make resistant and Nitrogen factors
dt[, resistant:=factor(resistant)]
dt[, N:=factor(N)]
# limit to weeks 0, 2,4 6, 8, 12, 20, need week zero for plots
ycols <- as.character(c(0, 2, 4, 6, 8, 12, 20))
dt_long <- melt(dt,
id.vars=c("resistant", "id", "N"),
measure.vars=ycols,
variable.name="week",
value.name="count")
return(dt_long)
}
# phage
sheet_i <- "Phage"
range_i <- "A3:X34" # ignores labels as the first two columns have none
phage <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
phage_long <- pre_process_data(phage)
sheet_i <- "Rotifers"
range_i <- "A5:X36" # skip double header and read only to week 20
rotifers <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
rotifers_long <- pre_process_data(rotifers)
sheet_i <- "Chlorella"
range_i <- "A4:X35" # skip double header and read only to week 20
# add first two columns as in other three
chlorella <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
chlorella_long <- pre_process_data(chlorella)
sheet_i <- "Nodularia"
range_i <- "A5:V36" # skip double header and read only to week 20
nodularia_part <- data.table(read_excel(file_path, sheet=sheet_i, range=range_i, col_names=FALSE))
# change colnames so not duplicate
colnames(nodularia_part) <- paste("X",1:22,sep="")
nodularia <- cbind(phage[, 1:2], nodularia_part)
nodularia_long <- pre_process_data(nodularia)
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id"
summary(aov(count ~ N + Error(id), phage_long))$"Error: id"
summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id"
summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1 <- unlist(summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id")[stats]
aov2 <- unlist(summary(aov(count ~ N + Error(id), phage_long))$"Error: id")[stats]
aov3 <- unlist(summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id")[stats]
aov4 <- unlist(summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id")[stats]
table_1 <- data.table(component=c("Nodularia", "Phage", "Chlorella", "Rotifer"),
rbind(aov1, aov2, aov3, aov4))
setnames(table_1, old=colnames(table_1), new=c("component", "DDF", "F", "p"))
knitr::kable(table_1, digits=c(NA, 0, 3, 3))
phage_long
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ N + Error(id), nodularia_long[week!=0]))$"Error: id"
summary(aov(count ~ N + Error(id), phage_long))$"Error: id"
summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id"
summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1 <- unlist(summary(aov(count ~ N + Error(id), nodularia_long))$"Error: id")[stats]
aov2 <- unlist(summary(aov(count ~ N + Error(id), phage_long))$"Error: id")[stats]
aov3 <- unlist(summary(aov(count ~ N + Error(id), chlorella_long))$"Error: id")[stats]
aov4 <- unlist(summary(aov(count ~ N + Error(id), rotifers_long))$"Error: id")[stats]
table_1 <- data.table(component=c("Nodularia", "Phage", "Chlorella", "Rotifer"),
rbind(aov1, aov2, aov3, aov4))
setnames(table_1, old=colnames(table_1), new=c("component", "DDF", "F", "p"))
knitr::kable(table_1, digits=c(NA, 0, 3, 3))
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ N + Error(id), nodularia_long[week!=0]))$"Error: id"
summary(aov(count ~ N + Error(id), phage_long[week!=0]))$"Error: id"
summary(aov(count ~ N + Error(id), chlorella_long[week!=0]))$"Error: id"
summary(aov(count ~ N + Error(id), rotifers_long[week!=0]))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1 <- unlist(summary(aov(count ~ N + Error(id), nodularia_long[week!=0]))$"Error: id")[stats]
aov2 <- unlist(summary(aov(count ~ N + Error(id), phage_long[week!=0]))$"Error: id")[stats]
aov3 <- unlist(summary(aov(count ~ N + Error(id), chlorella_long[week!=0]))$"Error: id")[stats]
aov4 <- unlist(summary(aov(count ~ N + Error(id), rotifers_long[week!=0]))$"Error: id")[stats]
table_1 <- data.table(component=c("Nodularia", "Phage", "Chlorella", "Rotifer"),
rbind(aov1, aov2, aov3, aov4))
setnames(table_1, old=colnames(table_1), new=c("component", "DDF", "F", "p"))
knitr::kable(table_1, digits=c(NA, 0, 3, 3))
show_full_table <- FALSE
if(show_full_table==TRUE){
summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_lim" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_rich" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), phage_long[N=="N_lim" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), phage_long[N=="N_rich" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_lim" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_rich" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_lim" & week!=0]))$"Error: id"
summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_rich" & week!=0]))$"Error: id"
}
stats <- c("Df2", "F value1", "Pr(>F)1")
aov1a <- unlist(summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_lim" & week!=0]))$"Error: id")[stats]
aov2a <- unlist(summary(aov(count ~ resistant + Error(id), phage_long[N=="N_lim" & week!=0]))$"Error: id")[stats]
aov3a <- unlist(summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_lim" & week!=0]))$"Error: id")[stats]
aov4a <- unlist(summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_lim" & week!=0]))$"Error: id")[stats]
aov1b <- unlist(summary(aov(count ~ resistant + Error(id), nodularia_long[N=="N_rich" & week!=0]))$"Error: id")[stats]
aov2b <- unlist(summary(aov(count ~ resistant + Error(id), phage_long[N=="N_rich" & week!=0]))$"Error: id")[stats]
aov3b <- unlist(summary(aov(count ~ resistant + Error(id), chlorella_long[N=="N_rich" & week!=0]))$"Error: id")[stats]
aov4b <- unlist(summary(aov(count ~ resistant + Error(id), rotifers_long[N=="N_rich" & week!=0]))$"Error: id")[stats]
table_2 <- data.table(component=rep(c("Nodularia", "Phage", "Chlorella", "Rotifer"), each=2),
treatment=rep(c("N_lim", "N_rich"), 2),
rbind(aov1a, aov1b, aov2a, aov2b, aov3a, aov3b, aov4a, aov4b))
setnames(table_2, old=colnames(table_2), new=c("component", "treatment", "DDF", "F", "p"))
knitr::kable(table_2, digits=c(NA, NA, 0, 2, 5))
if(knitr_path==TRUE){
image_path <- "../images/Data from Frequency of virus-resistant hosts determines experimental community dynamics/table2.png"
}else{
image_path <- "/images/Data from Frequency of virus-resistant hosts determines experimental community dynamics/table2.png"
}
knitr::include_graphics(image_path)
dt <- rbind(data.table(component="Nodularia", nodularia_long),
data.table(component="Phage", phage_long),
data.table(component="Chlorella", chlorella_long),
data.table(component="Rotifers", rotifers_long))
dt[, week:=as.integer(as.character(week))]
dt[, component:=factor(component, c("Nodularia", "Phage", "Chlorella", "Rotifers"))]
# raw means
raw_means <- na.omit(dt[, .(count=mean(count, na.rm=TRUE)), by=.(component, resistant, N, week)])
gg <- ggplot(data=raw_means, aes(x=week, y=count, group=resistant, color=resistant)) +
geom_point() +
geom_line() +
scale_y_continuous(trans='log10') +
scale_color_manual(values=c("black", "green", "red")) +
facet_grid(component~N, scales="free") +
NULL
gg
