row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit3.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit4.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit5.anova[, ycols], by=0, sort=FALSE)
colnames(df) <- c("Term", "numDF", "denDF", "Plant biomass F", "Plant biomass p", "Branch length F", "Branch length p", "N branches F", "N branches p", "Stem length F", "Stem length p", "Algae biomass F", "Algae biomass p")
table_s1_reml <- copy(df)
knitr::kable(table_s1_reml, digits=c(NA, 0, 0, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3))
ycols <- c("F-value", "p-value")
df <- merge(fit1b.anova, fit2b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit3b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit4b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit5b.anova[, ycols], by=0, sort=FALSE)
colnames(df) <- c("Term", "numDF", "denDF", "Plant biomass F", "Plant biomass p", "Branch length F", "Branch length p", "N branches F", "N branches p", "Stem length F", "Stem length p", "Algae biomass F", "Algae biomass p")
table_s1_ml <- copy(df)
knitr::kable(table_s1_ml, digits=c(NA, 0, 0, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3))
blogdown:::serve_site()
fit5.emm
fit5.emm
# modeled SE using the full-factorial model and ML fit (not the additive model reported)
fit5.emm <- data.table(summary(emmeans(fit5b,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5.emm[, emmean.sq:=emmean^2]
fit5.emm[, SE.sq:=SE^2]
pd <- position_dodge(0.9)
gg1b <- ggplot(data=fit5.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean-SE.sq, ymax=emmean+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1b
# modeled SE using the full-factorial model and ML fit (not the additive model reported)
fit5.emm <- data.table(summary(emmeans(fit5b,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5.emm[, emmean.sq:=emmean^2]
fit5.emm[, SE.sq:=SE^2]
pd <- position_dodge(0.9)
gg1b <- ggplot(data=fit5.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean.sq-SE.sq, ymax=emmean.sq+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1b
# raw SE
shoot[, present_scaled_Strictly_epiphytic_algae_DW_g_Myrio:=ifelse(is.na(scaled_Strictly_epiphytic_algae_DW_g_Myrio),0,1)]
fit5.raw_means <- shoot[, .(epiph_algae_biom=mean(scaled_Strictly_epiphytic_algae_DW_g_Myrio, na.rm=TRUE),
sd=sd(scaled_Strictly_epiphytic_algae_DW_g_Myrio, na.rm=TRUE),
N=sum(present_scaled_Strictly_epiphytic_algae_DW_g_Myrio)),
by=.(NUTRIENT_TREAT, CAGE_TREAT, DENSITY_TREAT)]
fit5.raw_means[, SE:=sd/sqrt(N)]
# orderBy(~NUTRIENT_TREAT + CAGE_TREAT + DENSITY_TREAT, fit5.raw_means)
pd <- position_dodge(0.9)
gg1 <- ggplot(data=fit5.raw_means, aes(x=CAGE_TREAT, y=epiph_algae_biom, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=epiph_algae_biom-SE, ymax=epiph_algae_biom+SE), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1
# raw SE using transformed data then backtransformed
fit5.raw_means <- shoot[, .(epiph_algae_biom=mean(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
sd=sd(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
N=sum(present_scaled_Strictly_epiphytic_algae_DW_g_Myrio)),
by=.(NUTRIENT_TREAT, CAGE_TREAT, DENSITY_TREAT)]
fit5.raw_means[, SE:=sd/sqrt(N)]
fit5.raw[, raw_mean:=epiph_algae_biom^2]
fit5.raw_means <- shoot[, .(epiph_algae_biom=mean(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
sd=sd(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
N=sum(present_scaled_Strictly_epiphytic_algae_DW_g_Myrio)),
by=.(NUTRIENT_TREAT, CAGE_TREAT, DENSITY_TREAT)]
fit5.raw_means[, SE:=sd/sqrt(N)]
fit5.raw_means[, raw_mean:=epiph_algae_biom^2]
fit5.raw_means[, raw_SE:=SE^2]
fit5.raw_means
# modeled SE using the full-factorial model and ML fit (not the additive model reported)
fit5b.emm <- data.table(summary(emmeans(fit5b,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5b.emm[, emmean.sq:=emmean^2]
fit5b.emm[, SE.sq:=SE^2]
# modeled SE using the additve model and ML fit
fit5c.emm <- data.table(summary(emmeans(fit5c,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5c.emm[, emmean.sq:=emmean^2]
fit5c.emm[, SE.sq:=SE^2]
# raw SE using transformed data then backtransformed
fit5.raw_means <- shoot[, .(epiph_algae_biom=mean(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
sd=sd(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
N=sum(present_scaled_Strictly_epiphytic_algae_DW_g_Myrio)),
by=.(NUTRIENT_TREAT, CAGE_TREAT, DENSITY_TREAT)]
fit5.raw_means[, SE:=sd/sqrt(N)]
fit5.raw_means[, raw_mean:=epiph_algae_biom^2]
fit5.raw_means[, raw_SE:=SE^2]
# full factorial model
pd <- position_dodge(0.9)
gg1b <- ggplot(data=fit5b.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean.sq-SE.sq, ymax=emmean.sq+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1b
# additive model
pd <- position_dodge(0.9)
gg1c <- ggplot(data=fit5c.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean.sq-SE.sq, ymax=emmean.sq+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1c
# raw backtransformed
pd <- position_dodge(0.9)
gg1d <- ggplot(data=fit5.raw, aes(x=CAGE_TREAT, y=raw_mean, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=raw_mean-raw_SE, ymax=raw_mean+raw_SE), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
# modeled SE using the full-factorial model and ML fit (not the additive model reported)
fit5b.emm <- data.table(summary(emmeans(fit5b,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5b.emm[, emmean.sq:=emmean^2]
fit5b.emm[, SE.sq:=SE^2]
# modeled SE using the additve model and ML fit
fit5c.emm <- data.table(summary(emmeans(fit5c,
specs=c("DENSITY_TREAT", "CAGE_TREAT","NUTRIENT_TREAT"))))
fit5c.emm[, emmean.sq:=emmean^2]
fit5c.emm[, SE.sq:=SE^2]
# raw SE using transformed data then backtransformed
fit5.raw_means <- shoot[, .(epiph_algae_biom=mean(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
sd=sd(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio), na.rm=TRUE),
N=sum(present_scaled_Strictly_epiphytic_algae_DW_g_Myrio)),
by=.(NUTRIENT_TREAT, CAGE_TREAT, DENSITY_TREAT)]
fit5.raw_means[, SE:=sd/sqrt(N)]
fit5.raw_means[, raw_mean:=epiph_algae_biom^2]
fit5.raw_means[, raw_SE:=SE^2]
# full factorial model
pd <- position_dodge(0.9)
gg1b <- ggplot(data=fit5b.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean.sq-SE.sq, ymax=emmean.sq+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1b
# additive model
pd <- position_dodge(0.9)
gg1c <- ggplot(data=fit5c.emm, aes(x=CAGE_TREAT, y=emmean.sq, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=emmean.sq-SE.sq, ymax=emmean.sq+SE.sq), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1c
# raw backtransformed
pd <- position_dodge(0.9)
gg1d <- ggplot(data=fit5.raw_means, aes(x=CAGE_TREAT, y=raw_mean, fill=DENSITY_TREAT)) +
geom_col(position=pd) +
geom_errorbar(aes(ymin=raw_mean-raw_SE, ymax=raw_mean+raw_SE), width=0.2, position=pd) +
facet_wrap(.~NUTRIENT_TREAT) +
NULL
gg1d
# additive  model
fit <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
anova(fit, type = "marginal")
# additive  model
fit <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
knitr::kable(anova(fit, type = "marginal")["CAGE_TREAT"])
# additive  model
fit <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
knitr::kable(anova(fit, type = "marginal")["CAGE_TREAT",])
# additive  model
fit <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
knitr::kable(anova(fit, type = "marginal")["CAGE_TREAT",], digits=c(0,0,2,3))
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
anova(fit1, type = "marginal") # machts nichts
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit.emm <- emmeans(fit, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
contrast(fit.emm, method="revpairwise")
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit.emm <- emmeans(fit, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
contrast(fit.emm, method="revpairwise", adjust="none")[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit.emm <- emmeans(fit, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
data.table(contrast(fit.emm, method="revpairwise", adjust="none"))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
data.table(contrast(fit.emm, method="revpairwise", adjust="none"))
contrast(fit.emm, method="revpairwise", adjust="none")
dim(contrast(fit.emm, method="revpairwise", adjust="none"))
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit.emm <- emmeans(fit, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
summary(contrast(fit.emm, method="revpairwise", adjust="none"))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
dim(summary(contrast(fit.emm, method="revpairwise", adjust="none")))
fit <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit.emm <- emmeans(fit, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
# additive  model
knitr::kable(anova(fit5c, type = "marginal")["CAGE_TREAT",], digits=c(0,0,2,3))
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
cont1
library(agricolae)
install.packages("agricolae")
library(agricolae)
fit1b.anova
LSD.test(shoot$ShootDW_g, Shoot$DENSITY_TREAT, DFerror=2, MSerror=19)
library(readxl)
library(ggplot2)
library(ggpubr)
library(nlme)
library(lmerTest)
library(car)
library(emmeans)
library(data.table)
library(lmtest) #?
library(agricolae)
data_folder <- "../data"
folder <- "Data from Density-dependent positive feedbacks buffer aquatic plants from interactive effects of eutrophication and predator loss"
# images need to be moved to /static/images/data from.../image.png
knitr_path <- FALSE
knitr_path <- TRUE
fn <-"plant_grazer_data_SDonadi.xlsx"
# open sheet "shoot level"
sheet_i <- "Shoot level"
file_path <- paste(data_folder, folder, fn, sep='/')
shoot <- data.table(read_excel(file_path, sheet = sheet_i))
shoot <- shoot[CAGE_TREAT!="uncaged"] # Delete CAGE_TREAT="uncaged" as these are not in main analysis
shoot[, SITE:=factor(SITE)]
shoot[, CAGE_ID:=factor(CAGE_ID)]
shoot[, CAGE_TREAT:=factor(CAGE_TREAT)]
shoot[, DENSITY_TREAT:=factor(DENSITY_TREAT)]
shoot[, NUTRIENT_TREAT:=factor(NUTRIENT_TREAT)]
# open sheet "cage level"
sheet_i <- "Cage level"
file_path <- paste(data_folder, folder, fn, sep='/')
cage <- data.table(read_excel(file_path, sheet = sheet_i))
cage <- cage[CAGE_TREAT!="uncaged"] # Delete CAGE_TREAT="uncaged" as these are not in main analysis
cage[, SITE:=factor(SITE)]
cage[, CAGE_ID:=factor(CAGE_ID)]
cage[, CAGE_TREAT:=factor(CAGE_TREAT)]
cage[, DENSITY_TREAT:=factor(DENSITY_TREAT)]
cage[, NUTRIENT_TREAT:=factor(NUTRIENT_TREAT)]
shoot <- shoot[CAGE_TREAT!="uncaged"]
shoot[, Strictly_epiphytic_algae_DW_g_Myrio:=as.numeric(Strictly_epiphytic_algae_DW_g_Myrio)]
shoot[, scaled_Strictly_epiphytic_algae_DW_g_Myrio:=as.numeric(scaled_Strictly_epiphytic_algae_DW_g_Myrio)]
shoot[, wind_fetch:=as.numeric(wind_fetch)]
cage[, Avgscaled_macrograzers_and_chirono_AFDW_mg_Myrio:=as.numeric(Avgscaled_macrograzers_and_chirono_AFDW_mg_Myrio)]
cage[, Avgscaled_macrograzers_and_chirono_n_Myrio:=as.numeric(Avgscaled_macrograzers_and_chirono_n_Myrio)]
cage[, wind_fetch:=as.numeric(wind_fetch)]
# The authors use nlme and not lme4
# fit by REML
fit1 <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, data=shoot)
fit1.anova <- anova(fit1, type = "marginal")
fit2 <- lme(sqrt(Sum_branch_length)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, data=shoot)
fit2.anova <- anova(fit2, type = "marginal")
fit3 <- lme(sqrt(N_tot_branches)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, data=shoot)
fit3.anova <- anova(fit3, type = "marginal")
fit4 <- lme(sqrt(Max_length_cm)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, data=shoot)
fit4.anova <- anova(fit4, type = "marginal")
fit5 <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, data=shoot, na.action=na.exclude)
fit5.anova <- anova(fit5, type = "marginal")
# fit by ML
fit1b <- lme(ShootDW_g ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit1b.anova <- anova(fit1b, type = "marginal") # machts nichts
fit2b <- lme(sqrt(Sum_branch_length)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit2b.anova <- anova(fit2b, type = "marginal")
fit3b <- lme(sqrt(N_tot_branches)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit3b.anova <- anova(fit3b, type = "marginal")
fit4b <- lme(sqrt(Max_length_cm)  ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot)
fit4b.anova <- anova(fit4b, type = "marginal")
fit5b <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT*CAGE_TREAT*NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
fit5b.anova <- anova(fit5b, type = "marginal")
ycols <- c("F-value", "p-value")
df <- merge(fit1.anova, fit2.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit3.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit4.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1.anova)
df <- merge(df, fit5.anova[, ycols], by=0, sort=FALSE)
colnames(df) <- c("Term", "numDF", "denDF", "Plant biomass F", "Plant biomass p", "Branch length F", "Branch length p", "N branches F", "N branches p", "Stem length F", "Stem length p", "Algae biomass F", "Algae biomass p")
table_s1_reml <- copy(df)
knitr::kable(table_s1_reml, digits=c(NA, 0, 0, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3))
ycols <- c("F-value", "p-value")
df <- merge(fit1b.anova, fit2b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit3b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit4b.anova[, ycols], by=0, sort=FALSE)
df <- df[,-1]
row.names(df) <- row.names(fit1b.anova)
df <- merge(df, fit5b.anova[, ycols], by=0, sort=FALSE)
colnames(df) <- c("Term", "numDF", "denDF", "Plant biomass F", "Plant biomass p", "Branch length F", "Branch length p", "N branches F", "N branches p", "Stem length F", "Stem length p", "Algae biomass F", "Algae biomass p")
table_s1_ml <- copy(df)
knitr::kable(table_s1_ml, digits=c(NA, 0, 0, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3))
fn <- "tableS1.png"
if(knitr_path==TRUE){
image_path <- paste("../images", folder, fn, sep="/")
}else{
image_path <- paste("/images", folder, fn, sep="/")
}
knitr::include_graphics(image_path)
#
fit5c <- lme(sqrt(scaled_Strictly_epiphytic_algae_DW_g_Myrio) ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot, na.action=na.exclude)
knitr::kable(anova(fit5c, type = "marginal"), digits=c(0,0,2,3))
# additive  model
knitr::kable(anova(fit5c, type = "marginal")["CAGE_TREAT",], digits=c(0,0,2,3))
LSD.test(shoot$ShootDW_g, Shoot$DENSITY_TREAT, DFerror=2, MSerror=19)
LSD.test(shoot$ShootDW_g, shoot$DENSITY_TREAT, DFerror=2, MSerror=19)
LSD.test(shoot$ShootDW_g, shoot$DENSITY_TREAT, DFerror=2, MSerror=19)
shoot$DENSITY_TREAT
shoot$ShootDW_g
LSD.test(shoot$ShootDW_g, shoot$DENSITY_TREAT, DFerror=2, MSerror=19)
LSD.test(shoot$ShootDW_g, shoot[DENSITY_TREAT!="1_low", DENSITY_TREAT], DFerror=2, MSerror=19)
LSD.test(shoot[DENSITY_TREAT!="1_low", ShootDW_g], shoot[DENSITY_TREAT!="1_low", DENSITY_TREAT], DFerror=2, MSerror=19)
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
cont1
LSD.test(shoot[DENSITY_TREAT!="1_low", ShootDW_g], shoot[DENSITY_TREAT!="1_low", DENSITY_TREAT], DFerror=2, MSerror=19)
a <- LSD.test(shoot[DENSITY_TREAT!="1_low", ShootDW_g], shoot[DENSITY_TREAT!="1_low", DENSITY_TREAT], DFerror=2, MSerror=19)
a
t1 <- LSD.test(shoot[, ShootDW_g], shoot[, DENSITY_TREAT], DFerror=2, MSerror=19)
t2 <- LSD.test(shoot[DENSITY_TREAT!="1_low", ShootDW_g], shoot[DENSITY_TREAT!="1_low", DENSITY_TREAT], DFerror=2, MSerror=19)
t1
install.packages("predictmeans")
library(predictmeans)
library(readxl)
library(ggplot2)
library(ggpubr)
library(nlme)
library(lmerTest)
library(car)
library(emmeans)
library(data.table)
library(lmtest) #?
library(predictmeans)
data_folder <- "../data"
folder <- "Data from Density-dependent positive feedbacks buffer aquatic plants from interactive effects of eutrophication and predator loss"
# images need to be moved to /static/images/data from.../image.png
knitr_path <- FALSE
predictmeans(fit1b)
predictmeans(fit1b, modelterm="DENSITY_TREAT")
predictmeans(fit1b, modelterm=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
?predictmeans
predictmeans(fit1b, modelterm=DENSITY_TREAT)
predictmeans(fit1b, modelterm="DENSITY_TREAT")
predictmeans(fit1b, modelterm="DENSITY_TREAT", pairwise = TRUE)
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT", pairwise = TRUE)
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE)
names(predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE)
)
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE)$"Pairwise p-value"
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE)$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
cont1
cont1
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
cont1$p.value
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE)$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
cont1$p.value
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, mplot=FALSE)$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
cont1 <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
cont1$p.value
predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast1$p.value
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
fit.pm <- predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)
fit.pm$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
fit.pm
means <- fit.pm$`Predicted Means`^2
means
means <- fit.pm$`Predicted Means`
dim(means)
fit.emm
means <- fit.pm$`Predicted Means`
means
a <- fit.emm[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- summary(emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT")))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.emm
dim(fit.emm)
summary(fit.emm)
# is the fold-change correct
a <- summary(fit.emm)[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
# is the fold-change correct
a <- summary(fit.emm)[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", "emmean"]
a <- summary(fit.emm)
a
# is the fold-change correct
a <- data.table(summary(fit.emm))[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
a
a <- data.table(summary(fit.emm))[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
a <- data.table(summary(fit.emm))[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
(a-b)/b
a <- data.table(summary(fit.emm))[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
b <- data.table(summary(fit.emm))[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
(a-b)/b
a/b
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
fit.pm <- predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)
fit.pm$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
# is the fold-change correct?
a <- data.table(summary(fit.emm))[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
b <- data.table(summary(fit.emm))[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", emmean]
(a-b)/b
shoot[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g]
a <- mean(shoot[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g])
b <- a <- mean(shoot[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g])
(a-b)/b
a <- mean(shoot[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
b <- a <- mean(shoot[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
(a-b)/b
a
b
a <- mean(shoot[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
b <- mean(shoot[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
(a-b)/b
a <- mean(shoot[DENSITY_TREAT=="3_high" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
b <- mean(shoot[DENSITY_TREAT=="2_intermediate" & CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched", ShootDW_g], na.rm=TRUE)
(a-b)/b
a/b
fit1z <- lme(ShootDW_g ~ DENSITY_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot[CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched"])
anova(fit1z, type = "marginal") # machts nichts
fit1z <- lme(ShootDW_g ~ DENSITY_TREAT + wind_fetch + Actual_Retention_time, random = ~1|SITE/CAGE_ID, method="ML", data=shoot[CAGE_TREAT=="closed" & NUTRIENT_TREAT=="enriched"])
anova(fit1z, type = "marginal") # machts nichts
fit.emm <- emmeans(fit1z, specs=c("DENSITY_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
fit.pm <- predictmeans(fit1z, modelterm="DENSITY_TREAT", pairwise = TRUE, plot=FALSE)
fit.pm$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
fit.emm <- emmeans(fit1z, specs=c("DENSITY_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))
fit.emm <- emmeans(fit1z, specs=c("DENSITY_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high - 2_intermediate",]
fit.contrast$p.value
# plant biomass ANOVA reproduced with ML so use fit1b
fit.emm <- emmeans(fit1b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
fit.pm <- predictmeans(fit1b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)
fit.pm$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
# algae mass used the additive model
fit.emm <- emmeans(fit5c, specs="CAGE_TREAT") # marginal means
fit.emm
# algae mass used the additive model
fit.emm <- data.table(summary(emmeans(fit5c, specs="CAGE_TREAT"))) # marginal means
fit.emm
# algae mass used the additive model
fit.emm <- data.table(summary(emmeans(fit5c, specs="CAGE_TREAT"))) # marginal means
a <- fit.emm[CAGE_TREAT=="closed", emmean]
b <- fit.emm[CAGE_TREAT=="open", emmean]
a/b
# algae mass used the additive model
fit.emm <- data.table(summary(emmeans(fit5c, specs="CAGE_TREAT"))) # marginal means
a <- fit.emm[CAGE_TREAT=="closed", scaled_Strictly_epiphytic_algae_DW_g_Myrio]
# algae mass used the additive model
fit.emm <- data.table(summary(emmeans(fit5c, specs="CAGE_TREAT"))) # marginal means
a <- fit.emm[CAGE_TREAT=="closed", emmean]
b <- fit.emm[CAGE_TREAT=="open", emmean]
a/b
a <- mean(shoot[CAGE_TREAT=="closed", scaled_Strictly_epiphytic_algae_DW_g_Myrio], na.rm=TRUE)
b <- mean(shoot[CAGE_TREAT=="open", scaled_Strictly_epiphytic_algae_DW_g_Myrio], na.rm=TRUE)
a/b
# algae mass used the additive model
fit.emm <- data.table(summary(emmeans(fit5c, specs="CAGE_TREAT"))) # marginal means
a <- (fit.emm[CAGE_TREAT=="closed", emmean])^2
b <- (fit.emm[CAGE_TREAT=="open", emmean])^2
a/b
# number of branches reproduced with ML so use fit3b
fit.emm <- emmeans(fit3b, specs=c("DENSITY_TREAT", "CAGE_TREAT", "NUTRIENT_TREAT"))
fit.contrast <- data.table(summary(contrast(fit.emm, method="revpairwise", adjust="none")))[contrast=="3_high,closed,enriched - 2_intermediate,closed,enriched",]
fit.contrast$p.value
fit.pm <- predictmeans(fit3b, modelterm="DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT", pairwise = TRUE, plot=FALSE)
fit.pm$"Pairwise p-value"["3_high:closed:enriched","2_intermediate:closed:enriched"]
fit6 <- lme(Avgscaled_macrograzers_and_chirono_AFDW_mg_Myrio ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time + DENSITY_TREAT:CAGE_TREAT + DENSITY_TREAT:NUTRIENT_TREAT + CAGE_TREAT*NUTRIENT_TREAT + DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT, random = ~1|SITE, method="ML", data=cage, na.action=na.exclude)
drop1(fit6,test="Chisq")
# fit by REML
fit6 <- lme(Avgscaled_macrograzers_and_chirono_AFDW_mg_Myrio ~ DENSITY_TREAT + CAGE_TREAT + NUTRIENT_TREAT + wind_fetch + Actual_Retention_time + DENSITY_TREAT:CAGE_TREAT + DENSITY_TREAT:NUTRIENT_TREAT + CAGE_TREAT*NUTRIENT_TREAT + DENSITY_TREAT:CAGE_TREAT:NUTRIENT_TREAT, random = ~1|SITE, method="ML", data=cage, na.action=na.exclude)
drop1(fit6,test="Chisq")
