kable(coefficients(summary(fit)), digits=3)
.127/.950
.127/.950
(.95+1.27)/.95
(.95+.127)/.95
b_table <- coefficients(summary(fit))
b <- b_table[, "Estimate"]
b
b['Treatment2_4Fclip:Capture_Period13']/b['Capture_Period13']
b['Treatment2_4Fclip:Capture_Period13']/b['Capture_Period13']
b['Treatment3_8Fclip:Capture_Period13']/b['Capture_Period13']
coefficients(summary(fit2))
coefficients(summary(fit2))
head(bird_wide)
gg <- ggplot(data=bird_wide, aes(x=day3mass, y=dMass, color=Treatment)) +
geom_point()
gg
ycols <- c('Treatment', 'day3mass', 'dMass')
bird_wide[!is.na(dMass), .(N=.N), by=Treatment]
gg <- ggplot(data=bird_wide, aes(x=day3mass, y=dMass, color=Treatment)) +
geom_point() +
geom_smooth(method='lm')
gg
blogdown:::new_post_addin()
base_path <- "content/data"
folder <- '2018-05-26-data-from-ontogenetic-thermal-tolerance'
fn <- 'data_cavieres et al JEB 2016.xls'
file_path <- paste(base_path,folder, fn, sep='/')
dt <- data.table(read_excel(file_path))
library(knitr)
library(readxl)
library(ggplot2)
library(data.table)
library(lme4)
library(lmerTest)
folder <- '2018-05-26-data-from-ontogenetic-thermal-tolerance'
fn <- 'data_cavieres et al JEB 2016.xls'
file_path <- paste(base_path,folder, fn, sep='/')
dt <- data.table(read_excel(file_path))
dt
old_colnames <- colnames(dt)
ycols <- c('Tbar', 'Tfluc', 'Sex', 'X1', 'X2', 'OR', 'To', 'Vmax', 'Tbr', 'LTL', 'UTL')
setnames(dt, old_colnames, ycols)
dt[,Tbar:=factor(Tbar, c('15','28'))]
dt[,Tfluc:=factor(Tfluc, c('0','4'))]
names(dt)
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
y <- ycols[1]
full_model <- formula(paste(y, "~ Tbar*Tfluc"))
full_model
fit <- lm(full_model, data=dt)
summary(fit)
library(MuMIn)
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit.all
?dredge
summary(fit.all)
best <- get.models(fit.all, subset=1)[[1]]
best
summary(best)
coefficients(summary(get.models(fit.all, subset=1)[[1]]))
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
best <- list()
for(j in length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best[[j]] <- coefficients(summary(get.models(fit.all, subset=1)[[1]]))
}
ycols
j
best
best <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best[[j]] <- coefficients(summary(get.models(fit.all, subset=1)[[1]]))
}
best
names(best) <- ycols
best
best <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best[[j]] <- round(coefficients(summary(get.models(fit.all, subset=1)[[1]])), 3)
}
names(best) <- ycols
best
qplot(x=Tbar, y=UTL, fill=Tfluc, data=dt) + geom_pont()
qplot(x=Tbar, y=UTL, fill=Tfluc, data=dt) + geom_point()
library(HarrellPlot)
res <- HarrellPlot(x="Tbar", y="UTL", g="Tfluc", data=dt)
library(cowplot)
res <- HarrellPlot(x="Tbar", y="UTL", g="Tfluc", data=dt)
names(res)
HarrellPlot(x="Tbar", y="UTL", g="Tfluc", data=dt)$gg
?HarrellPlot
HarrellPlot(x="Tbar", y="UTL", g="Tfluc", data=dt, interaction.group = TRUE)$gg
HarrellPlot(x="Tfluc", y="UTL", g="Tbar", data=dt, interaction.group = TRUE)$gg
dt$Tbar
dt
library(doBy)
dt <- orderBy(~ Tbar + Tfluc, dt)
dt
HarrellPlot(x="Tfluc", y="UTL", g="Tbar", data=dt, interaction.group = TRUE)$gg
HarrellPlot(x="Tfluc", y="UTL", g="Tbar", data=dt, add_interaction=TRUE, interaction.group = TRUE)$gg
HarrellPlot(x="Tfluc", y="UTL", g="Tbar", data=dt, add_interaction=TRUE, interaction.group = TRUE, contrasts.method='revpairwise')$gg
best[['UTL']]
fit.all
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
best <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best[[j]] <- round(coefficients(summary(get.models(fit.all, subset=1)[[1]])), 3)
}
names(best) <- ycols
best
full_model <- formula(paste("UTL ~ Tbar*Tfluc"))
coefficients(summary(lm(full_model, data=dt, na.action=na.fail)))
best
round(coefficients(summary(get.models(fit.all, subset=1)[[1]])), 3)
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
table1 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
table1[[j]] <- round(coefficients(summary(get.models(fit.all, subset=1)[[1]])), 3)
}
names(table1) <- ycols
table1
library(emmeans)
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
table2[[j]] <- round(coefficients(summary(fit)), 3)
}
names(table2) <- ycols
table2
j<-1
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
bars <- lsmeans(fit, specs=c('Tbar', 'Tfluc'))
bars
full_model <- formula(paste(ycols[j], "~ Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
bars <- lsmeans(fit, specs=c('Tbar', 'Tfluc'))
bars
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)
bars <- lsmeans(fit, specs=c('Tbar', 'Tfluc'))
fit <- get.models(fit.all, subset=1)[[1]]
fit
bars <- lsmeans(fit, specs=c('Tbar', 'Tfluc'))
bars
summary(fit)
HarrellPlot(x="Tfluc", y="UTL", g="Tbar", data=dt, add_interaction=FALSE, interaction.group = TRUE, contrasts.method='revpairwise')$gg
j
summary(fit)
?emmeans
emmeans(fit, specs=c('Tbar', 'Tfluc'))
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
bars <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
table2[[j]] <- round(coefficients(summary(fit)), 3)
}
names(table2) <- ycols
table2
table2
bars
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
bars <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
table2[[j]] <- round(bars, 3)
}
names(table2) <- ycols
table2
bars
table2
bars
round(bars, 3)
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
names(table2) <- ycols
table2
j
ycols
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
emmeans(fit)
summary(fit)
names(coefficients(fit))
call(fit)
names(fit)
fit$effects
names(fit)
fit$xlevels
fit$terms
fit$terms$factors
names(fit$terms)
unlist(fit$terms)
fit$terms[[1]]
fit$terms[[2]]
fit$terms[[3]]
fit$terms[["term.labels"]]
fit$terms[[4]]
variable.names(fit)
as.list(formula(fit))
all.vars(formula(fit))
all.vars(formula(fit))[-1]
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best_vars <- all.vars(formula(fit))[-1]
fit <- get.models(fit.all, subset=1)[[1]]
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
j
summary(fit)
best_vars
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
best_vars <- all.vars(formula(fit))[-1]
fit <- get.models(fit.all, subset=1)[[1]]
best_vars
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
table2[[j]] <- emmeans(fit, specs=best_vars)
}
names(table2) <- ycols
table2
fit
best_vars
length(best_vars)
j
fit
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar + Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
#  fit.all <- dredge(fit)
#  fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar * Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
#  fit.all <- dredge(fit)
#  fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sext + Tbar * Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
#  fit.all <- dredge(fit)
#  fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar * Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
#  fit.all <- dredge(fit)
#  fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1]
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}
names(table2) <- ycols
table2
dredge_it <- FALSE
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar * Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
if(dredge_it){
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1] # if using dredge
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}else{
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
}
names(table2) <- ycols
table2
blogdown:::serve_site()
blogdown:::serve_site()
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
full_table <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
full_table[[j]] <- round(coefficients(summary(fit)), 3)
}
names(full_table) <- ycols
full_table
full_table
j<-5
res <- HarrellPlot(x="Tfluc", y="UTL", g=ycols[j], data=dt, add_interaction=TRUE, interaction.group = TRUE, contrasts.method='revpairwise')
ycols[j]
dt$Tfluc
res <- HarrellPlot(x="Tfluc", y=ycols[j], g="Tbar", data=dt, add_interaction=TRUE, interaction.group = TRUE, contrasts.method='revpairwise')
names(res)
res$tables
full_table <- list()
for(j in 1:length(ycols)){
res <- HarrellPlot(x="Tfluc", y=ycols[j], g="Tbar", data=dt,
add_interaction=TRUE, interaction.group = TRUE,
contrasts.method='revpairwise')
full_table[[j]] <- res$tables$contrasts
}
names(full_table) <- ycols
full_table
full_table
res$tables$contrasts
full_table <- list()
for(j in 1:length(ycols)){
res <- HarrellPlot(x="Tfluc", y=ycols[j], g="Tbar", data=dt,
add_interaction=TRUE, interaction.group = TRUE,
contrasts.method='revpairwise')
full_table[[j]] <- res$tables$contrasts
}
names(full_table) <- ycols
full_table
full_table
gg_list <- list()
for(j in 1:length(ycols)){
res <- HarrellPlot(x="Tfluc", y=ycols[j], g="Tbar", data=dt,
add_interaction=TRUE, interaction.group = TRUE,
contrasts.method='revpairwise')
full_table[[j]] <- res$tables$contrasts
gg_list[[j]] <- res$gg
}
names(full_table) <- ycols
names(gg_list) <- ycols
gg_list$Vmax
full_table
full_table
gg_list
blogdown:::serve_site()
table2
table2
library(knitr)
library(readxl)
library(ggplot2)
library(doBy)
library(data.table)
library(MuMIn)
library(emmeans)
library(cowplot)
library(HarrellPlot)
base_path <- "content/data"
folder <- '2018-05-26-data-from-ontogenetic-thermal-tolerance'
fn <- 'data_cavieres et al JEB 2016.xls'
file_path <- paste(base_path,folder, fn, sep='/')
dt <- data.table(read_excel(file_path))
old_colnames <- colnames(dt)
ycols <- c('Tbar', 'Tfluc', 'Sex', 'X1', 'X2', 'OR', 'To', 'Vmax', 'Tbr', 'LTL', 'UTL')
setnames(dt, old_colnames, ycols)
dt[,Tbar:=factor(Tbar, c('15','28'))]
dt[,Tfluc:=factor(Tfluc, c('0','4'))]
# order by factor for HarrelPlot
dt <- orderBy(~ Tbar + Tfluc, dt)
ycols <- c('To', 'Vmax', 'Tbr', 'LTL', 'UTL', 'OR', 'X1', 'X2')
table1 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar*Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
fit.all <- dredge(fit)
table1[[j]] <- round(coefficients(summary(get.models(fit.all, subset=1)[[1]])), 3)
}
names(table1) <- ycols
table1
dredge_it <- FALSE
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar * Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
if(dredge_it){
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1] # if using dredge
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}else{
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Sex + Tbar + Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
if(dredge_it){
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1] # if using dredge
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}else{
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
}
names(table2) <- ycols
table2
table2 <- list()
for(j in 1:length(ycols)){
full_model <- formula(paste(ycols[j], "~ Tbar + Tfluc"))
fit <- lm(full_model, data=dt, na.action=na.fail)
if(dredge_it){
fit.all <- dredge(fit)
fit <- get.models(fit.all, subset=1)[[1]]
best_vars <- all.vars(formula(fit))[-1] # if using dredge
if(length(best_vars > 0)){
table2[[j]] <- emmeans(fit, specs=best_vars)
}else{
table2[[j]] <- coefficients(fit)[1]
}
}else{
table2[[j]] <- emmeans(fit, specs=c('Tbar', 'Tfluc'))
}
}
names(table2) <- ycols
table2
blogdown:::serve_site()
