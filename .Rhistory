library(ggplot2)
library(readxl)
library(data.table)
library(emmeans)
library(nlme)
library(lmerTest)
library(car)
library(doBy)
library(plyr)
data_folder <- "../data"
folder <- "Data from Response of bluebunch wheatgrass to invasion- differences in competitive ability among invader-experienced and naïve populations"
# images need to be moved to /static/images/data from.../image.png
knitr_path <- FALSE # run = TRUE to debug
source("../R/clean_label.R") # bookdown
fn <- "Gibson_invasion_response_data.xlsx"
file_path <- paste(data_folder, folder, fn, sep="/")
sheet_i <- "Germination"
exp1 <- data.table(read_excel(file_path, sheet=sheet_i))
colnames(exp1) <- clean_label(colnames(exp1))
setnames(exp1, "Type", "Experience")
sheet_i <- "Traits"
exp2 <- data.table(read_excel(file_path, sheet=sheet_i, na="x"))
colnames(exp2) <- clean_label(colnames(exp2))
exp2[, Treatment:=factor(Treatment)]
exp2[, Experience:=factor(Population_Type)]
exp2[, Stage:=ifelse(as.character(Date)=="2012-04-30","Seedling", "Juvenile")]
exp2[, Exp_Pop:=factor(paste(Experience,Population,sep="."))]
con3 <- list(Treatment=contr.sum, Experience=contr.sum) # change the contrasts coding for the model matrix
# fit.full <- lm(Week_1 ~ Treatment*Experience, data=exp1, contrasts=con3)
# Anova(fit.full, type="3")
# 26 residual df suggests either this was one-way anova with something removed or an additive model
fit.add <- lm(Week_1 ~ Treatment + Experience, data=exp1, contrasts=con3)
Anova(fit.add, type="3") # replicates
# fit.one <- lm(Week_1 ~ Experience, data=exp1[Population!="Ana"])
# anova(fit.one) # obviously cannot be it given Ana is in the posthoc
fit.emm <- emmeans(fit.add, specs=c("Experience"))
# Tukey HSD
contrast(fit.emm, method="revpairwise")
# no adjustment
# contrast(fit.emm, method="revpairwise", adjust="none")
xcols <- c("Treatment", "Experience", "Stage", "Population", "Exp_Pop")
ycols <- c("Longest_leaf", "n_Leaves", "Biomass", "Shoot_biomass", "Root_biomass", "Root.shoot_ratio")
con3 <- list(Treatment=contr.sum, Experience=contr.sum, Population=contr.sum) # change the contrasts coding for the model matrix
for(y in ycols){
subdata <- na.omit(exp2.b[Population!="Ana" &
Stage=="Seedling" &
N > 1, .SD, .SDcols=c(xcols, y)])
fit1 <- lm(get(y) ~ Treatment*Experience + Population, data=subdata)
anova(fit1) # sequential SS so only interaction should be the same
fit3 <- lm(get(y) ~ Treatment*Experience + Population, contrasts=con3, data=subdata)
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population, data=subdata)
anova(fit, type="marginal")
}
counts <- exp2[!is.na(n_Leaves) & Population!="Ana", .(N=.N), by=.(Treatment, Experience, Population, Stage, Exp_Pop)]
# counts[, .(N=.N), by=.(Stage, Population)]
exp2.b <- merge(exp2, counts, by=c("Treatment", "Experience", "Population", "Stage", "Exp_Pop"))
# which(counts[, N] < 3)
xcols <- c("Treatment", "Experience", "Stage", "Population", "Exp_Pop")
ycols <- c("Longest_leaf", "n_Leaves", "Biomass", "Shoot_biomass", "Root_biomass", "Root.shoot_ratio")
con3 <- list(Treatment=contr.sum, Experience=contr.sum, Population=contr.sum) # change the contrasts coding for the model matrix
for(y in ycols){
subdata <- na.omit(exp2.b[Population!="Ana" &
Stage=="Seedling" &
N > 1, .SD, .SDcols=c(xcols, y)])
fit1 <- lm(get(y) ~ Treatment*Experience + Population, data=subdata)
anova(fit1) # sequential SS so only interaction should be the same
fit3 <- lm(get(y) ~ Treatment*Experience + Population, contrasts=con3, data=subdata)
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population, data=subdata)
anova(fit, type="marginal")
}
y <- ycols[2]
subdata <- na.omit(exp2.b[Population!="Ana" &
Stage=="Seedling" &
N > 1, .SD, .SDcols=c(xcols, y)])
fit1 <- lm(get(y) ~ Treatment*Experience + Population, data=subdata)
anova(fit1) # sequential SS so only interaction should be the same
fit3 <- lm(get(y) ~ Treatment*Experience + Population, contrasts=con3, data=subdata)
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population, data=subdata)
anova(fit, type="marginal")
anova(fit, type="marginal")
form_i <- formula(paste(y, "~ Treatment*Experience + Population"))
fit <- gls(form_i, data=subdata)
n_pop <- 5
n <- 1
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop <- paste("pop", 1:(n_pop*2), sep="")
pop_vec <- rep(rep(pop, each=n), 2)
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
fit1 <- lm(y ~ A*B + pop:B, data=fd)
anova(fit1)
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd)
drop1(fit3, .~., test="F")
coef(summary(fit3))
# X <- model.matrix(fit3)
# xtx.fd <- t(X)%*%X
# xtx.fd
# solve(xtx.fd)
fit3 <- lm(y ~ B + B/pop, contrasts=con3, data=fd)
drop1(fit3, .~., test=”F”)
drop1(fit3, .~., test="F")
Anova(aov(y ~ B/pop, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
con3 <- list(B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B + pop/B, contrasts=con3, data=fd))
Anova(aov(y ~ B + Error(pop/B), contrasts=con3, data=fd))
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B + Error(pop/B), contrasts=con3, data=fd))
Anova(aov(y ~ B + Error(B/[pop]), contrasts=con3, data=fd))
Anova(aov(y ~ B + Error(B/pop), contrasts=con3, data=fd))
Anova(aov(y ~ Error(B/pop), contrasts=con3, data=fd))
head(fd)
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop <- paste("pop", 1:(n_pop*2), sep="")
pop_vec <- rep(rep(pop, each=n), 2)
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B + Error(B/pop), contrasts=con3, data=fd))
Anova(aov(y ~ B + Error(B/pop), contrasts=con3, data=fd))
cows <- data.frame (
route = factor(rep(c("injection", "oral"), c(5, 9))),
drug = factor(rep(c("Bovineumab", "Charloisazepam",
"Angustatin", "Herefordmycin", "Mollycoddle"), c(3,2,  4,2,3))),
resp = c(34, 35, 34,   44, 43,      36, 33, 36, 32,   26, 25,   25, 24, 24)
)
cows
cows.lm <- lm(resp ~ route + drug, data = cows)
cows.rg <- ref_grid(cows.lm)
cows.rg
fit1 <- lm(y ~ A*B + pop:B, data=fd)
anova(fit1)
fit1.rg <- ref_grid(fit1)
fit1.rg
fit1 <- lm(y ~ A*B + pop, data=fd)
anova(fit1)
fit1.rg <- ref_grid(fit1)
fit1.rg
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd)
drop1(fit3, .~., test="F")
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd)
drop1(fit3, .~., test="F")
coef(summary(fit3))
fit3 <- lm(y ~ A*B + pop%in%B, contrasts=con3, data=fd)
drop1(fit3, .~., test="F")
coef(summary(fit3))
head(fd)
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop <- rep(paste("pop", 1:(n_pop), sep=""), 2*2)
pop.b <- paste("pop", 1:(n_pop*2), sep="")
pop_vec <- rep(rep(pop, each=n), 2)
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
fd
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ B/pop2, contrasts=con3, data=fd))
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop_vec <- rep(paste("pop", 1:(n_pop), sep=""), 2*2)
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2)
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
pop.b=factor(pop.b_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ B + Error(B/pop), contrasts=con3, data=fd))
aov(y ~ B + Error(B/pop), contrasts=con3, data=fd)
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop_vec <- rep(paste("pop", 1:(n_pop), sep=""), 2*2)
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2)
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
pop.b=factor(pop.b_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd), type="3")
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
subdata
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
fit <- lm(y ~ B + pop.b, contrasts=con3, data=fd)
Anova(fit, type="3")
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population, data=subdata)
anova(fit, type="marginal")
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population:Experience, data=subdata)
fit <- lme(form_i, random = ~1|Experience/Population, data=subdata)
anova(fit, type="marginal")
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Population, data=subdata)
anova(fit, type="marginal")
form_i <- formula(paste(y, "~ Treatment*Experience"))
fit <- lme(form_i, random = ~1|Experience/Population, data=subdata)
anova(fit, type="marginal")
form_i <- formula(paste(y, "~ Treatment*Experience + (1|Population"))
fit <- lmer(form_i, data=subdata)
anova(fit)
form_i <- formula(paste(y, "~ Treatment*Experience + (1|Population)"))
fit <- lmer(form_i, data=subdata)
anova(fit)
form_i <- formula(paste(y, "~ Treatment*Experience + (1|Population:Experience)"))
fit <- lmer(form_i, data=subdata)
anova(fit)
levels(subdata$Experience)
# recode Populations to 1:n_pop; this is only way to analyze as fixed using aov
pops1 <- unique(subdata[Experience=="E", Population])
pops1
subdata[, Population2:=Population]
popsE <- unique(subdata[Experience=="E", Population])
mapvalues(Population2, from = popsE, to = as.character(1:length(popsE)))
subdata <- na.omit(exp2.b[Population!="Ana" &
Stage=="Seedling" &
N > 1, .SD, .SDcols=c(xcols, y)])
# recode Populations to 1:n_pop; this is only way to analyze as fixed using aov
# subdata[, Population2:=Population]
popsE <- unique(subdata[Experience=="E", Population])
subdata[, Population2:= mapvalues(Population, from = popsE, to = as.character(1:length(popsE)))]
subdata[,Population2]
levels(subdata$Experience)
popsE <- unique(subdata[Experience=="E", Population])
subdata[, Population2:= mapvalues(Population, from = popsE, to = as.character(1:length(popsE)))]
popsN <- unique(subdata[Experience=="N", Population])
subdata[, Population2:= mapvalues(Population, from = popsN, to = as.character(1:length(popsE)))]
subdata[, Population2:= mapvalues(Population, from = popsN, to = as.character(1:length(popsN)))]
subdata[,Population2]
subdata <- na.omit(exp2.b[Population!="Ana" &
Stage=="Seedling" &
N > 1, .SD, .SDcols=c(xcols, y)])
# recode Populations to 1:n_pop; this is only way to analyze as fixed using aov
# subdata[, Population2:=Population]
popsE <- unique(subdata[Experience=="E", Population])
subdata[Population %in% popsE, Population2:= mapvalues(Population, from = popsE, to = as.character(1:length(popsE)))]
popsN <- unique(subdata[Experience=="N", Population])
subdata[Population %in% popsN, Population2:= mapvalues(Population, from = popsN, to = as.character(1:length(popsN)))]
subdata[,Population2]
fit3 <- lm(get(y) ~ Treatment*Experience + Experience/Population2, contrasts=con3, data=subdata)
Anova(fit3)
Anova(fit3, type="3")
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
Anova(aov(y ~ Treatment*Experience + Population2%in%Experience, contrasts=con3, data=subdata), type="3")
fd$pop
fd$pop.b
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd))
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
# delete 1 pop
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd[pop.b != "pop10"]), type="3")
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
fit3 <- lm(get(y) ~ Treatment*Experience + Experience/Population2, contrasts=con3, data=subdata)
Anova(fit3, type="3")
fit1.rg <- ref_grid(fit3)
fit1.rg
subdata
subdata[1:100]
# to use aov, there cannot be missing cell, thta is a population has to be measured in all combos of T*E
counts <- subdata[, .(N=.N). by=.(Treatment, Experience, Population)]
counts <- subdata[, .(N=.N), by=.(Treatment, Experience, Population)]
counts
popcount <- counts[, .(N=.N, by=Population)]
popcount
popcount <- counts[, .(N=.N), by=Population]
popcount
popcount[N==2, Population]
fit3 <- lm(get(y) ~ Treatment*Experience + Experience/Population, contrasts=con3, data=subdata)
Anova(fit3, type="3")
Anova(aov(y ~ Treatment*Experience + Population2%in%Experience, contrasts=con3,
data=subdata[Population %in% pops_in]), type="3")
pops_in <- popcount[N==2, Population]
Anova(aov(y ~ Treatment*Experience + Population2%in%Experience, contrasts=con3,
data=subdata[Population %in% pops_in]), type="3")
subdata[Population %in% pops_in]
dim(subdata)
fit3 <- lm(get(y) ~ Treatment*Experience + Experience/Population, contrasts=con3, data=subdata)
# Anova(fit3, type="3")
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
fit1 <- lm(get(y) ~ Treatment*Experience + Population, data=subdata)
anova(fit1) # sequential SS so only interaction should be the same
con3 <- list(Treatment=contr.sum, Experience=contr.sum, Population=contr.sum) # change the contrasts coding for the model matrix
fit3 <- lm(get(y) ~ Treatment*Experience + Population, contrasts=con3, data=subdata)
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
con3 <- list(Treatment=contr.sum, Experience=contr.sum) # change the contrasts coding for the model matrix
fit3 <- lm(get(y) ~ Treatment*Experience + Population, contrasts=con3, data=subdata)
(table_i <- drop1(fit3, .~., test="F")) # matches JMP except Experience row
Anova(aov(y ~ Treatment*Experience + Population2%in%Experience, contrasts=con3,
data=subdata[Population %in% pops_in]), type="3")
form_i <- formula(paste(y, "~ Treatment*Experience + Population"))
fit <- gls(form_i, data=subdata) # singular
fit <- gls(y ~ A*B, weights=varIdent(form=~1|Pop), data=subdata) # singular
fit <- gls(y ~ A*B, weights=varIdent(form=~1|Pop), data=fd) # singular
fit <- gls(y ~ A*B, weights=varIdent(form=~1|poop), data=fd) # singular
fit <- gls(y ~ A*B, weights=varIdent(form=~1|pop), data=fd) # singular
Anova(fit, type="3")
fit <- gls(y ~ A*B + pop, weights=varIdent(form=~1|pop), data=fd) # singular
Anova(fit, type="3")
fit <- gls(get(y) ~ Treatment*Experience + Population, weights=varIdent(form=~1|Population), data=subdata) # singular
y
form_i <- formula(paste(y, "~ Treatment*Experience + Population"))
fit <- gls(form_i, weights=varIdent(form=~1|Population), data=subdata) # singular
dim)fd
dim(fd)
fd
pop_vec <- rep(rep(paste("pop", 1:(n_pop), sep=""), each=n), 2) # pop given same name across levels of B
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2) # pop given different name across levels of B
length(pop_vec)
length(pop.b_vec)
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop_vec <- rep(rep(paste("pop", 1:(n_pop), sep=""), each=n), 2*2) # pop given same name across levels of B
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2) # pop given different name across levels of B
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
pop.b=factor(pop.b_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
fd
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
fit <- gls(y ~ A*B + pop, weights=varIdent(form=~1|pop), data=fd) # singular
Anova(fit, type="3")
# delete 1 pop
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd[pop.b != "pop10"]), type="3")
fd[pop.b != "pop10"]
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
fit <- gls(y ~ A*B + pop, weights=varIdent(form=~1|pop), data=fd) # singular
Anova(fit, type="3")
# delete 1 pop across both levels of A
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd[pop.b != "pop10"]), type="3") # fails
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd)
drop1(fit3, .~., test="F")
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd[pop.b != "pop10"])
drop1(fit3, .~., test="F")
it <- gls(y ~ A*B + pop.b, weights=varIdent(form=~1|pop.b), data=fd) # singular
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd) # singular
Anova(fit, type="3")
fit <- gls(y ~ A*B + pop%in%B, contrasts=con3, weights=varIdent(form=~1|pop.b), data=fd)
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd)
anova(fit)
anova(fit, type="marginal")
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd)
anova(fit, type="marginal")
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd)
anova(fit, type="marginal")
Anova(fit, type="3")
anova(fit, type="marginal")
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd)
anova(fit, type="marginal")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
2400/100
24*3
7.5*6
72+45
750/100
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop_vec <- rep(rep(paste("pop", 1:(n_pop), sep=""), each=n), 2*2) # pop given same name across levels of B
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2) # pop given different name across levels of B
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
pop.b=factor(pop.b_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
write.table(fd, paste(data_folder, folder, "fake_data.csv", sep="/"), row.names=FALSE, quote=FALSE, sep=",")
set.seed(1)
n_pop <- 5
n <- 3
A <- c("A", "a")
B <- c("B", "b")
A_vec <- rep(A, each=2*n_pop*n)
B_vec <- rep(rep(B, each=n_pop*n), 2)
pop_vec <- rep(rep(paste("pop", 1:(n_pop), sep=""), each=n), 2*2) # pop given same name across levels of B
pop.b_vec <- rep(rep(paste("pop", 1:(n_pop*2), sep=""), each=n), 2) # pop given different name across levels of B
fd <- data.table(A=factor(A_vec),
B=factor(B_vec),
pop=factor(pop_vec),
pop.b=factor(pop.b_vec),
y=rnorm(length(A_vec)))
fd[, y:=ifelse(B=="b", y+1, y)]
write.table(fd, paste(data_folder, folder, "fake_data.csv", sep="/"), row.names=FALSE, quote=FALSE, sep=",")
fd[1,]
View(fit1)
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B/pop, contrasts=con3, data=fd), type="3")
Anova(aov(y ~ A*B + B:pop, contrasts=con3, data=fd), type="3")
fit <- gls(y ~ A*B + pop%in%B, weights=varIdent(form=~1|pop.b), data=fd)
anova(fit, type="marginal")
anova(fit, type="marginal")
anova(fit, type="marginal")
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd[pop.b != "pop10"]), type="3") # fails
fit3 <- lm(y ~ A*B + pop:B, contrasts=con3, data=fd[pop.b != "pop10"])
drop1(fit3, .~., test="F") # df B = 0
con3 <- list(B=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ B/pop, contrasts=con3, data=fd))
Anova(aov(y ~ B/pop, contrasts=con3, data=fd), type="3")
#Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd)) # fails
#Anova(aov(y ~ B/pop.b, contrasts=con3, data=fd), type="3")
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
fit <- lm(y ~ B + pop.b, contrasts=con3, data=fd)
# Anova(fit, type="3")
drop1(fit, .~., test="F") # df B = 0
fit <- lm(y ~ B + pop%in%B, contrasts=con3, data=fd)
Anova(fit, type="3")
coef(summary(fit))
fit <- lm(y ~ B + pop.b, contrasts=con3, data=fd)
# Anova(fit, type="3")
drop1(fit, .~., test="F") # df B = 0
coef(summary(fit))
coef(summary(lm(y ~ B + pop%in%B, data=fd)))
coef(summary(lm(y ~ B + pop.b, data=fd)))
levels(fd$pop.b)
fit.nest <- lm(y ~ B + pop%in%B, data=fd)
fit.cross <- lm(y ~ B + pop.b, data=fd)
model.matrix(fit.nest)
model.matrix(fit.cross)
coef(summary(fit.nest))
coef(summary(fit.cross))
anova(fit.nest)
con3 <- list(A=contr.sum, B=contr.sum, pop=contr.sum) # change the contrasts coding for the model matrix
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
fit <- gls(form_i, weights=varIdent(form=~1|Population), data=subdata) # singular
subdata
form_i <- formula(paste(y, "~ Treatment*Experience + Population2:Experience"))
fit <- gls(form_i, weights=varIdent(form=~1|Population), data=subdata) # singular
Anova(aov(y ~ A*B + pop%in%B, contrasts=con3, data=fd), type="3")
