anova(lm(day3brood ~ Treatment, data=tab1)) #check
#note that these data are also in "Tab3", which is kinda dangerous
anova(lm(Mass ~ Treatment, data=bird[Nestling_Age=='3'])) # check
anova(lm(CORT_B ~ Treatment, data=bird[Nestling_Age=='3'])) #check
gg <- ggplot(data=bird, aes(x=Treatment, y=CORT_B, fill=Capture_Period)) +
geom_boxplot()
gg
fit2a <- lmer(CORT_B ~ Treatment*Capture_Period + DOY_Initiation + day3mass + (1|BandNo), data=bird)
kable(as.data.frame(anova(fit2a)), digits=3)
# kenward-rogers adjustment is default but I am specifying it regardless
emm_options(lmer.df = "kenward-roger")
fit2a_lsmeans <- emmeans(fit2a, spec=c('Treatment', 'Capture_Period'))
fit2a_lsmeans
# just for fun
x_rows <- c('Treatment2_4Fclip', 'Treatment3_8Fclip')
kable(coefficients(summary(fit2a))[x_rows,], digits=3)
# no adjustment for multiple tests -- just for fun
fit2a_table <- summary(contrast(fit2a_lsmeans, method='revpairwise', adjust='none'), infer=c(TRUE,TRUE))
x_rows <- c('2_4Fclip,3 - 1_control,3', '3_8Fclip,3 - 1_control,3')
kable(fit2a_table[which(fit2a_table[,"contrast"]%in%x_rows),], digits=3)
# Tukey HSD adjustment reproduces
fit2a_table <- summary(contrast(fit2a_lsmeans, method='revpairwise'), infer=c(TRUE,TRUE))
kable(fit2a_table[which(fit2a_table[,"contrast"]%in%x_rows),], digits=3)
# Tukey HSD adjustment reproduces
fit2a_table <- summary(contrast(fit2a_lsmeans, method='revpairwise'), infer=c(TRUE,TRUE))
x_rows <- c('1_control,13 - 1_control,3','2_4Fclip,13 - 2_4Fclip,3', '3_8Fclip,13 - 3_8Fclip,3')
kable(fit2a_table[which(fit2a_table[,"contrast"]%in%x_rows),], digits=3)
# capture period == nestling_age
gg <- ggplot(data=bird, aes(x=Treatment, y=Mass, fill=Capture_Period)) +
geom_boxplot()
gg
# without initiation
fit2b <- lmer(Mass ~ Treatment*Capture_Period + (1|BandNo), data=bird)
kable(as.data.frame(anova(fit2b)), digits=3)
# with initiation
fit2b <- lmer(Mass ~ DOY_Initiation + Treatment*Capture_Period + (1|BandNo), data=bird)
kable(as.data.frame(anova(fit2b, type=1)), digits=3)
kable(as.data.frame(anova(fit2b, type=2)), digits=3)
kable(as.data.frame(anova(fit2b, type=3)), digits=3)
coefficients(summary(fit2b))
emm_options(lmer.df = "kenward-roger")
fit2b_lsmeans <- emmeans(fit2b, spec=c('Treatment', 'Capture_Period'))
# no adjustment for multiple tests --  just for fun
b_table <- summary(contrast(fit2b_lsmeans, method='revpairwise', adjust='none'), infer=c(TRUE,TRUE))
x_rows <- c('1_control,13 - 1_control,3','2_4Fclip,13 - 2_4Fclip,3', '3_8Fclip,13 - 3_8Fclip,3')
kable(b_table[which(b_table[,"contrast"]%in%x_rows),], digits=3)
# Tukey HSD adjustment reproduces
b_table <- summary(contrast(fit2b_lsmeans, method='revpairwise'), infer=c(TRUE,TRUE))
kable(b_table[which(b_table[,"contrast"]%in%x_rows),], digits=3)
bird_wide <- dcast(bird,  Year + Treatment + BandNo + DOY_Initiation + day3mass ~ Capture_Period, value.var=c('Mass','Time'))
bird_wide[, dMass:=Mass_13 - Mass_3]
# change in mass
fit2b.c <- lm(dMass ~ DOY_Initiation + Mass_3 + Treatment, data=bird_wide)
coefs2.c <- coefficients(summary(fit2b.c))
kable(coefs2.c, digits=3)
# change in mass
gg <- ggplot(data=bird_wide, aes(x=day3mass, y=dMass, color=Treatment)) +
geom_point() +
theme_minimal()
gg
# sample size
ycols <- c('Treatment', 'day3mass', 'dMass')
bird_wide[!is.na(dMass), .(N=.N), by=Treatment]
# need to make Capture_Period a numeric dummy variable to get the right interaction effect -- when coded as a factor, lme/lmer creates an interaction column for both levels of Capture_Period if Treatment is missing from the model (but in the interaction)
bird[, Time:=as.integer(Capture_Period)-1]
fit.mod2 <- lme(Mass ~ DOY_Initiation + Time + Time:Treatment, random = ~ Time-1|BandNo,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | BandNo),
data = bird,
na.action=na.omit)
kable(coefficients(summary(fit.mod2)), digits = 3)
re_run <- FALSE
if(re_run==TRUE){
set.seed(1)
varcor <- VarCorr(fit2b)
var <- as.data.frame(VarCorr(fit2b))["vcov"][,1]
rho <- var[1]/sum(var)
fit2b_table <- coefficients(summary(fit2b))
mu1 <- fit2b_table["(Intercept)", "Estimate"]
b <- fit2b_table["Capture_Period13", "Estimate"]
mu <- c(mu1, mu1+b)
sigma <- matrix(c(var[1]+var[2], var[1],var[1], var[1]+var[2]), nrow=2)
inc <- c("1_control","3_8Fclip")
N_table <- bird_wide[Treatment %in% inc, .(N=.N), by=c('Treatment')]
N_table_long <- bird[Treatment %in% inc, .(N=.N), by=c('Treatment', 'Capture_Period')]
n <- sum(N_table[, N])
niter <- 2000
methods <- c('lmm', 'lm') # include 'cLDA' to compare cLDA to lm
fake_labels <- c('baseline_d', methods)
fake_b <- matrix(NA, nrow=niter, ncol=length(fake_labels))
colnames(fake_b) <- fake_labels
for(iter in 1:niter){
# data with no effect other than capture period.
Y <- rmvnorm(n, mean=mu, sigma=sigma)
# start with n1=n2
dt_wide <- data.table(ID=paste("bird",1:n,sep=''),
Treatment=factor(rep(c('control', 'clip'), times=c(n/2, n/2))),
pre=Y[,1],
post=Y[,2])
dt_wide[, Treatment:=factor(Treatment, c('control', 'clip'))]
dt_wide[, dMass:=post-pre]
dt <- melt(dt_wide, id.vars=c('ID','Treatment'),
measure.vars=c('pre', 'post'),
variable.name="Capture_Period",
value.name = "Mass"
)
dt[, Capture_Period:=factor(Capture_Period, c('pre', 'post'))]
fake_b[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fit.lmm <- lmer(Mass ~ Treatment*Capture_Period + (1|ID), dt)
fake_b[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Estimate']
fit.lm <- lm(dMass ~ pre + Treatment, data=dt_wide)
fake_b[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Estimate']
if('cLDA' %in% methods){
# model 2 of liang and zeger - unconstrained and constrained longitudinal data analysis
# adapted from gls code below
dt[, Time:=as.integer(Capture_Period) - 1] # Time has to be dummy coded for mod2 but not sure why
fit.mod2 <- lme(Mass ~ Time + Time:Treatment, random = ~ Time-1|ID,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | ID),
data = dt)
fake_b[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Value']
# model 2 using gls
# from https://datascienceplus.com/taking-the-baseline-measurement-into-account-constrained-lda-in-r/
# X <- model.matrix(~ Treatment*Capture_Period, data=dt)
# Xalt <- X[,c('Capture_Periodpost', "Treatmentclip:Capture_Periodpost")]
# clda_gls <- gls(Mass ~ Xalt,
#                 weights = varIdent(form = ~ 1 | Capture_Period),
#                 correlation=corSymm (form = ~ 1 | ID),
#                 data = dt)
# coefficients(summary(fit.lmm))
# coefficients(summary(fit.mod2))
# coefficients(summary(fit.lm))
}
}
fake_b <- data.table(fake_b)
fn <- 'fake_b.RData'
file_path <- paste(base_path, folder, fn, sep='/')
save(fake_b, file = file_path)
}else{
fn <- 'fake_b.RData'
file_path <- paste(base_path, folder, fn, sep='/')
load(file_path) # file name is fake_b
}
apply(fake_b, 2, quantile, c(0.025, 0.5, 0.975))
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = 'methods', variable.name='model', value.name='estimate')
methods
method
library(knitr)
library(readxl)
library(ggplot2)
library(data.table)
library(lme4)
library(lmerTest)
library(emmeans)
library(doBy)
library(mvtnorm)
library(nlme) # model 2 of Liang and Zeger 2000
base_path <- "content/data"  # console
folder <- '2018-05-07-data-from-success-despite-the-stress'
fn <- 'RiversetalVGSWhandicappingRawData.xls'
file_path <- paste(base_path, folder, fn, sep='/')
bird <- data.table(read_excel(file_path, sheet = 'Tab3 "a8"'))
bird[, Treatment:=factor(Treatment)]
bird[, Capture_Period:=factor(Nestling_Age)] # the paper uses Capture_Period as a label
bird[, Time:=as.integer(Capture_Period) - 1] # for the constrained LDA
fit2b <- lmer(Mass ~ DOY_Initiation + Treatment*Capture_Period + (1|BandNo), data=bird)
methods <- c('lmm', 'lm') # include 'cLDA' to compare cLDA to lm
fn <- 'fake_b.RData'
file_path <- paste(base_path, folder, fn, sep='/')
load(file_path) # file name is fake_b
apply(fake_b, 2, quantile, c(0.025, 0.5, 0.975))
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = 'methods', variable.name='model', value.name='estimate')
qplot(x=baseline_d, y=estimate, color=model, data=fake_b_long) + geom_smooth(method='lm')
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = 'method', variable.name='model', value.name='estimate')
fake_b
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = method, variable.name='model', value.name='estimate')
methods
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = methods, variable.name='model', value.name='estimate')
qplot(x=baseline_d, y=estimate, color=model, data=fake_b_long) + geom_smooth(method='lm')
methods <- NULL
methods
models <- c('lmm', 'lm', 'cLDA') # include 'cLDA' to compare cLDA to lm
set.seed(1)
varcor <- VarCorr(fit2b)
var <- as.data.frame(VarCorr(fit2b))["vcov"][,1]
rho <- var[1]/sum(var)
fit2b_table <- coefficients(summary(fit2b))
mu1 <- fit2b_table["(Intercept)", "Estimate"]
b <- fit2b_table["Capture_Period13", "Estimate"]
mu <- c(mu1, mu1+b)
sigma <- matrix(c(var[1]+var[2], var[1],var[1], var[1]+var[2]), nrow=2)
inc <- c("1_control","3_8Fclip")
N_table <- bird_wide[Treatment %in% inc, .(N=.N), by=c('Treatment')]
N_table_long <- bird[Treatment %in% inc, .(N=.N), by=c('Treatment', 'Capture_Period')]
n <- sum(N_table[, N])
niter <- 10
fake_labels <- c('baseline_d', models)
fake_b <- matrix(NA, nrow=niter, ncol=length(fake_labels))
colnames(fake_b) <- fake_labels
for(iter in 1:niter){
# data with no effect other than capture period.
Y <- rmvnorm(n, mean=mu, sigma=sigma)
# start with n1=n2
dt_wide <- data.table(ID=paste("bird",1:n,sep=''),
Treatment=factor(rep(c('control', 'clip'), times=c(n/2, n/2))),
pre=Y[,1],
post=Y[,2])
dt_wide[, Treatment:=factor(Treatment, c('control', 'clip'))]
dt_wide[, dMass:=post-pre]
dt <- melt(dt_wide, id.vars=c('ID','Treatment'),
measure.vars=c('pre', 'post'),
variable.name="Capture_Period",
value.name = "Mass"
)
dt[, Capture_Period:=factor(Capture_Period, c('pre', 'post'))]
fake_b[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fit.lmm <- lmer(Mass ~ Treatment*Capture_Period + (1|ID), dt)
fake_b[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Estimate']
fit.lm <- lm(dMass ~ pre + Treatment, data=dt_wide)
fake_b[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Estimate']
if('cLDA' %in% models){
# model 2 of liang and zeger - unconstrained and constrained longitudinal data analysis
# adapted from gls code below
dt[, Time:=as.integer(Capture_Period) - 1] # Time has to be dummy coded for mod2 but not sure why
fit.mod2 <- lme(Mass ~ Time + Time:Treatment, random = ~ Time-1|ID,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | ID),
data = dt)
fake_b[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Value']
# model 2 using gls
# from https://datascienceplus.com/taking-the-baseline-measurement-into-account-constrained-lda-in-r/
# X <- model.matrix(~ Treatment*Capture_Period, data=dt)
# Xalt <- X[,c('Capture_Periodpost', "Treatmentclip:Capture_Periodpost")]
# clda_gls <- gls(Mass ~ Xalt,
#                 weights = varIdent(form = ~ 1 | Capture_Period),
#                 correlation=corSymm (form = ~ 1 | ID),
#                 data = dt)
# coefficients(summary(fit.lmm))
# coefficients(summary(fit.mod2))
# coefficients(summary(fit.lm))
}
}
fake_b <- data.table(fake_b)
apply(fake_b, 2, quantile, c(0.025, 0.5, 0.975))
?kable
head(fake_b)
coefficients(summary(fit.lmm))
coefficients(summary(fit.lm))
coefficients(summary(fit.mod2))
set.seed(1)
varcor <- VarCorr(fit2b)
var <- as.data.frame(VarCorr(fit2b))["vcov"][,1]
rho <- var[1]/sum(var)
fit2b_table <- coefficients(summary(fit2b))
mu1 <- fit2b_table["(Intercept)", "Estimate"]
b <- fit2b_table["Capture_Period13", "Estimate"]
mu <- c(mu1, mu1+b)
sigma <- matrix(c(var[1]+var[2], var[1],var[1], var[1]+var[2]), nrow=2)
inc <- c("1_control","3_8Fclip")
N_table <- bird_wide[Treatment %in% inc, .(N=.N), by=c('Treatment')]
N_table_long <- bird[Treatment %in% inc, .(N=.N), by=c('Treatment', 'Capture_Period')]
n <- sum(N_table[, N])
niter <- 10
fake_labels <- c('baseline_d', models)
fake_b <- matrix(NA, nrow=niter, ncol=length(fake_labels))
fake_se <- matrix(NA, nrow=niter, ncol=length(fake_labels))
colnames(fake_b) <- fake_labels
colnames(fake_se) <- fake_labels
for(iter in 1:niter){
# data with no effect other than capture period.
Y <- rmvnorm(n, mean=mu, sigma=sigma)
# start with n1=n2
dt_wide <- data.table(ID=paste("bird",1:n,sep=''),
Treatment=factor(rep(c('control', 'clip'), times=c(n/2, n/2))),
pre=Y[,1],
post=Y[,2])
dt_wide[, Treatment:=factor(Treatment, c('control', 'clip'))]
dt_wide[, dMass:=post-pre]
dt <- melt(dt_wide, id.vars=c('ID','Treatment'),
measure.vars=c('pre', 'post'),
variable.name="Capture_Period",
value.name = "Mass"
)
dt[, Capture_Period:=factor(Capture_Period, c('pre', 'post'))]
fake_b[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fake_se[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fit.lmm <- lmer(Mass ~ Treatment*Capture_Period + (1|ID), dt)
fake_b[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Estimate']
fake_se[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Std. Error']
fit.lm <- lm(dMass ~ pre + Treatment, data=dt_wide)
fake_b[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Estimate']
fake_se[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Std. Error']
if('cLDA' %in% models){
# model 2 of liang and zeger - unconstrained and constrained longitudinal data analysis
# adapted from gls code below
dt[, Time:=as.integer(Capture_Period) - 1] # Time has to be dummy coded for mod2 but not sure why
fit.mod2 <- lme(Mass ~ Time + Time:Treatment, random = ~ Time-1|ID,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | ID),
data = dt)
fake_b[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Value']
fake_se[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Std.Error']
# model 2 using gls
# from https://datascienceplus.com/taking-the-baseline-measurement-into-account-constrained-lda-in-r/
# X <- model.matrix(~ Treatment*Capture_Period, data=dt)
# Xalt <- X[,c('Capture_Periodpost', "Treatmentclip:Capture_Periodpost")]
# clda_gls <- gls(Mass ~ Xalt,
#                 weights = varIdent(form = ~ 1 | Capture_Period),
#                 correlation=corSymm (form = ~ 1 | ID),
#                 data = dt)
# coefficients(summary(fit.lmm))
# coefficients(summary(fit.mod2))
# coefficients(summary(fit.lm))
}
}
fake_b <- data.table(fake_b)
fake_se <- data.table(fake_se)
kable(apply(fake_se, 2, quantile, c(0.025, 0.5, 0.975)), caption="Distribution of estimates for lmm, ANCOVA lm, and cLDA models. Also given is the distribution of the difference at baseline.")
qplot(x=baseline_d, y=estimate, color=model, data=fake_b_long) + geom_smooth(method='lm')
set.seed(1)
varcor <- VarCorr(fit2b)
var <- as.data.frame(VarCorr(fit2b))["vcov"][,1]
rho <- var[1]/sum(var)
fit2b_table <- coefficients(summary(fit2b))
mu1 <- fit2b_table["(Intercept)", "Estimate"]
b <- fit2b_table["Capture_Period13", "Estimate"]
mu <- c(mu1, mu1+b)
sigma <- matrix(c(var[1]+var[2], var[1],var[1], var[1]+var[2]), nrow=2)
inc <- c("1_control","3_8Fclip")
N_table <- bird_wide[Treatment %in% inc, .(N=.N), by=c('Treatment')]
N_table_long <- bird[Treatment %in% inc, .(N=.N), by=c('Treatment', 'Capture_Period')]
n <- sum(N_table[, N])
niter <- 100
fake_labels <- c('baseline_d', models)
fake_b <- matrix(NA, nrow=niter, ncol=length(fake_labels))
fake_se <- matrix(NA, nrow=niter, ncol=length(fake_labels))
colnames(fake_b) <- fake_labels
colnames(fake_se) <- fake_labels
for(iter in 1:niter){
# data with no effect other than capture period.
Y <- rmvnorm(n, mean=mu, sigma=sigma)
# start with n1=n2
dt_wide <- data.table(ID=paste("bird",1:n,sep=''),
Treatment=factor(rep(c('control', 'clip'), times=c(n/2, n/2))),
pre=Y[,1],
post=Y[,2])
dt_wide[, Treatment:=factor(Treatment, c('control', 'clip'))]
dt_wide[, dMass:=post-pre]
dt <- melt(dt_wide, id.vars=c('ID','Treatment'),
measure.vars=c('pre', 'post'),
variable.name="Capture_Period",
value.name = "Mass"
)
dt[, Capture_Period:=factor(Capture_Period, c('pre', 'post'))]
fake_b[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fake_se[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fit.lmm <- lmer(Mass ~ Treatment*Capture_Period + (1|ID), dt)
fake_b[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Estimate']
fake_se[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Std. Error']
fit.lm <- lm(dMass ~ pre + Treatment, data=dt_wide)
fake_b[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Estimate']
fake_se[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Std. Error']
if('cLDA' %in% models){
# model 2 of liang and zeger - unconstrained and constrained longitudinal data analysis
# adapted from gls code below
dt[, Time:=as.integer(Capture_Period) - 1] # Time has to be dummy coded for mod2 but not sure why
fit.mod2 <- lme(Mass ~ Time + Time:Treatment, random = ~ Time-1|ID,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | ID),
data = dt)
fake_b[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Value']
fake_se[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Std.Error']
# model 2 using gls
# from https://datascienceplus.com/taking-the-baseline-measurement-into-account-constrained-lda-in-r/
# X <- model.matrix(~ Treatment*Capture_Period, data=dt)
# Xalt <- X[,c('Capture_Periodpost', "Treatmentclip:Capture_Periodpost")]
# clda_gls <- gls(Mass ~ Xalt,
#                 weights = varIdent(form = ~ 1 | Capture_Period),
#                 correlation=corSymm (form = ~ 1 | ID),
#                 data = dt)
# coefficients(summary(fit.lmm))
# coefficients(summary(fit.mod2))
# coefficients(summary(fit.lm))
}
}
fake_b <- data.table(fake_b)
fake_se <- data.table(fake_se)
fake_b_long <- melt(fake_b, id.vars = 'baseline_d', measure.vars = models, variable.name='model', value.name='estimate')
gg <- ggplot(data=fake_b, aes(x=baseline_d, y=estimate, color=model)) +
geom_point() +
geom_smooth(method='lm') +
xlab("Difference at pre-treatment") +
ylab("Estimate") +
theme_minimal()
gg
fake_b_long
gg <- ggplot(data=fake_b_long, aes(x=baseline_d, y=estimate, color=model)) +
geom_point() +
geom_smooth(method='lm') +
xlab("Difference at pre-treatment") +
ylab("Estimate") +
theme_minimal()
gg
fake_se_long <- melt(fake_se, id.vars = 'baseline_d', measure.vars = models, variable.name='model', value.name='SE')
head(fake_se_long)
gg <- ggplot(data=fake_se_long, aes(x=baseline_d, y=SE, color=model)) +
geom_point() +
geom_smooth(method='lm') +
xlab("Difference at pre-treatment") +
theme_minimal()
gg
re_run <- TRUE
models <- c('lmm', 'lm', 'cLDA') # include 'cLDA' to compare cLDA to lm
if(re_run==TRUE){
set.seed(1)
varcor <- VarCorr(fit2b)
var <- as.data.frame(VarCorr(fit2b))["vcov"][,1]
rho <- var[1]/sum(var)
fit2b_table <- coefficients(summary(fit2b))
mu1 <- fit2b_table["(Intercept)", "Estimate"]
b <- fit2b_table["Capture_Period13", "Estimate"]
mu <- c(mu1, mu1+b)
sigma <- matrix(c(var[1]+var[2], var[1],var[1], var[1]+var[2]), nrow=2)
inc <- c("1_control","3_8Fclip")
N_table <- bird_wide[Treatment %in% inc, .(N=.N), by=c('Treatment')]
N_table_long <- bird[Treatment %in% inc, .(N=.N), by=c('Treatment', 'Capture_Period')]
n <- sum(N_table[, N])
niter <- 2000
fake_labels <- c('baseline_d', models)
fake_b <- matrix(NA, nrow=niter, ncol=length(fake_labels))
fake_se <- matrix(NA, nrow=niter, ncol=length(fake_labels))
colnames(fake_b) <- fake_labels
colnames(fake_se) <- fake_labels
for(iter in 1:niter){
# data with no effect other than capture period.
Y <- rmvnorm(n, mean=mu, sigma=sigma)
# start with n1=n2
dt_wide <- data.table(ID=paste("bird",1:n,sep=''),
Treatment=factor(rep(c('control', 'clip'), times=c(n/2, n/2))),
pre=Y[,1],
post=Y[,2])
dt_wide[, Treatment:=factor(Treatment, c('control', 'clip'))]
dt_wide[, dMass:=post-pre]
dt <- melt(dt_wide, id.vars=c('ID','Treatment'),
measure.vars=c('pre', 'post'),
variable.name="Capture_Period",
value.name = "Mass"
)
dt[, Capture_Period:=factor(Capture_Period, c('pre', 'post'))]
fake_b[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fake_se[iter, 'baseline_d'] <- mean(dt_wide[Treatment=='clip', pre], na.rm=TRUE) -
mean(dt_wide[Treatment=='control', pre], na.rm=TRUE)
fit.lmm <- lmer(Mass ~ Treatment*Capture_Period + (1|ID), dt)
fake_b[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Estimate']
fake_se[iter, 'lmm'] <- coefficients(summary(fit.lmm))['Treatmentclip:Capture_Periodpost', 'Std. Error']
fit.lm <- lm(dMass ~ pre + Treatment, data=dt_wide)
fake_b[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Estimate']
fake_se[iter, 'lm'] <- coefficients(summary(fit.lm))['Treatmentclip', 'Std. Error']
if('cLDA' %in% models){
# model 2 of liang and zeger - unconstrained and constrained longitudinal data analysis
# adapted from gls code below
dt[, Time:=as.integer(Capture_Period) - 1] # Time has to be dummy coded for mod2 but not sure why
fit.mod2 <- lme(Mass ~ Time + Time:Treatment, random = ~ Time-1|ID,
weights = varIdent(form = ~ 1 | Time),
correlation=corSymm (form = ~ 1 | ID),
data = dt)
fake_b[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Value']
fake_se[iter, 'cLDA'] <- coefficients(summary(fit.mod2))['Time:Treatmentclip', 'Std.Error']
# model 2 using gls
# from https://datascienceplus.com/taking-the-baseline-measurement-into-account-constrained-lda-in-r/
# X <- model.matrix(~ Treatment*Capture_Period, data=dt)
# Xalt <- X[,c('Capture_Periodpost', "Treatmentclip:Capture_Periodpost")]
# clda_gls <- gls(Mass ~ Xalt,
#                 weights = varIdent(form = ~ 1 | Capture_Period),
#                 correlation=corSymm (form = ~ 1 | ID),
#                 data = dt)
# coefficients(summary(fit.lmm))
# coefficients(summary(fit.mod2))
# coefficients(summary(fit.lm))
}
}
fake_b <- data.table(fake_b)
fake_se <- data.table(fake_se)
fn <- 'fake_b.RData'
file_path <- paste(base_path, folder, fn, sep='/')
save(fake_b, file = file_path)
fn <- 'fake_se.RData'
file_path <- paste(base_path, folder, fn, sep='/')
save(fake_b, file = file_path)
}else{
fn <- 'fake_b.RData'
file_path <- paste(base_path, folder, fn, sep='/')
load(file_path) # file name is fake_b
fn <- 'fake_se.RData'
file_path <- paste(base_path, folder, fn, sep='/')
load(file_path) # file name is fake_b
}
fake_se_long <- melt(fake_se, id.vars = 'baseline_d', measure.vars = models, variable.name='model', value.name='SE')
gg <- ggplot(data=fake_se_long, aes(x=baseline_d, y=SE, color=model)) +
geom_point() +
geom_smooth(method='lm') +
xlab("Difference at pre-treatment") +
theme_minimal()
gg
blogdown:::serve_site()
