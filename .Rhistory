fn <- 'behavioral data.csv'
file_path <- paste(base_path, folder, fn, sep='/')
dt.fig2 <- fread(file_path)
names(dt.fig2)
model <- formula(distance_from_bottom ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
setnames(dt.fig2, old=c('distance from the partitioning', 'distance from the bottom'),
new=c('distance_from_predator', 'distance_from_bottom'))
model <- formula(distance_from_bottom ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# swimming distance
model <- formula(tot_dist_swimming ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
dt.fig2
dt.fig2[1:99,]
dt.fig2[100:200,]
dt.fig2[100:198,]
aov(Length ~ (Pike_presence*Food_Ratio) + Error((Pike_presence*Food_Ratio)/Aquarium_ID), data=dt.fig1)
# length
summary(aov(Length ~ (Pike_presence*Food_Ratio) + Error((Pike_presence*Food_Ratio)/Aquarium_ID), data=dt.fig1))
anova(aov(Length ~ (Pike_presence*Food_Ratio) + Error((Pike_presence*Food_Ratio)/Aquarium_ID), data=dt.fig1))
fit <- (aov(Length ~ (Pike_presence*Food_Ratio) + Error((Pike_presence*Food_Ratio)/Aquarium_ID), data=dt.fig1))
names(fit)
?aov
print(fit)
fit <- lm(Length ~ (Pike_presence*Food_Ratio)/Aquarium_ID, data=dt.fig1)
summary(fit)
anova(fit)
fit <- lm(Length ~ (Pike_presence*Food_Ratio)/Aquarium_ID, data=dt.fig1)
anova(fit)
model <- formula(Length ~ Pike_presence*Food_Ratio)
fit.length <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig1)
anova(fit.length, type='sequential') # Type I
fit <- aov(Length ~ (Pike_presence*Food_Ratio) + Error(Aquarium_ID), data=dt.fig1)
summary(fit)
model <- formula(condition3 ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig1)
anova(fit.condition, type='sequential') # Type I
model <- formula(Length ~ Pike_presence*Food_Ratio)
fit.length <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig1)
anova(fit.length, type='sequential') # Type I
fit.length <- lme(model, random = ~ Pike_presence*Food_Ratio|Aquarium_ID, data=dt.fig1)
aov(Length ~ Pike_presence*Food_Ratio + Error(Aquarium_ID))
aov(Length ~ Pike_presence*Food_Ratio + Error(Aquarium_ID), data=dt.fig1)
model <- formula(distance_from_predator ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# distance from bottom
model <- formula(distance_from_bottom ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# swimming distance
model <- formula(tot_dist_swimming ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2)
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
head(dt.fig2)
fn <- 'behavioral data.csv'
file_path <- paste(base_path, folder, fn, sep='/')
dt.fig2 <- fread(file_path)
setnames(dt.fig2, old=c('distance from the partitioning', 'distance from the bottom', 'time_measured(start or end of experiment)'),
new=c('distance_from_predator', 'distance_from_bottom', 'time'))
model <- formula(distance_from_predator ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='start'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
model <- formula(distance_from_predator ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='start'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# distance from bottom
model <- formula(distance_from_bottom ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='start'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# swimming distance
model <- formula(tot_dist_swimming ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='start'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
tail(dt.fig2)
# end of experiment
# distance from predator
model <- formula(distance_from_predator ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='end'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# distance from bottom
model <- formula(distance_from_bottom ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='end'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
# swimming distance
model <- formula(tot_dist_swimming ~ Pike_presence*Food_Ratio)
fit.condition <- lme(model, random = ~ 1|Aquarium_ID, data=dt.fig2[time=='end'])
anova(fit.condition, type='sequential') # Type I
anova(fit.condition, type='marginal') # Type III
blogdown:::serve_site()
blogdown:::new_post_addin()
library(knitr)
library(readxl)
library(ggplot2)
library(data.table)
library(nlme)
library(lme4)
library(lmerTest)
library(emmeans)
base_path <- "../data" #knitr
folder <- '2018-06-19-data-from-critical-thermal-limits-affected-differently-by-developmental-and-adult-thermal-fluctuations'
library(knitr)
library(ggplot2)
library(data.table)
library(emmeans)
library(car)
base_path <- "../data" #knitr
folder <- '2018-06-19-data-from-critical-thermal-limits-affected-differently-by-developmental-and-adult-thermal-fluctuations'
file_list <- c('CTmin_2d_8_19,23.csv',
'CTmin_2d_4_19,23.csv',
'CTmax_2d_8_19,23.csv',
'CTmax_2d_4_19,23.csv')
fn <- file_list[1]
fn
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(fn)
fly <- fread(file_path)
fly
file_list <- c(
'CTmin_2d_4_19,23.csv',
'CTmin_2d_8_19,23.csv',
'CTmax_2d_4_19,23.csv',
'CTmax_2d_8_19,23.csv'
)
fn <- file_list[1]
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
form <- formula('ctmin ~ dev.treat*ad.treat')
fit <- lm(form, data=fly)
fly
form <- formula('ctmin ~ dev.treat*dev.temp')
fit <- lm(form, data=fly)
anova(fit) # type I
# type III is not much different except the "critical" p-value!
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
# Occasional outliers exceeding 2.2 times the interquartile range were removed
iq <- fly[, .(iq25=quantile(ctmin, 0.25)), by=.(dev.treat, dev.temp)]
iq
# Occasional outliers exceeding 2.2 times the interquartile range were removed
iq <- fly[, .(iq25=quantile(ctmin, 0.25), iq75=quantile(ctmin, 0.75)), by=.(dev.treat, dev.temp)]
iq
x <- fly$ctmin
q1 <- quantile(x, .25, na.rm=TRUE)
q3 <- quantile(x, .75, na.rm=TRUE)
iqr <- q3 - q1
min <- q1 - (iqr*2.2)
max <- q3 + (iqr*2.2)
x.out <- ifelse(x < min | x > max, NA, x)
x
x.out
fn
outlier.removal <- function(x){
q1 <- quantile(x, .25, na.rm=TRUE)
q3 <- quantile(x, .75, na.rm=TRUE)
iqr <- q3 - q1
min <- q1 - (iqr*2.2)
max <- q3 + (iqr*2.2)
x.out <- ifelse(x < min | x > max, NA, x)
return(x.out)
}
fly[, CT:=outlier.removal(ctmin)]
fly
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
fly
form <- formula('CT ~ dev.treat*dev.temp')
fit <- lm(form, data=fly)
anova(fit) # type I
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
fly_list
file_list
fn <- "CTmin_2d_8_19,23.csv"
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
fly
form <- formula('CT ~ dev.treat*dev.temp')
fit <- lm(form, data=fly)
anova(fit) # type I
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
table1_labels <- c('F_CTmin.4', 'p_CTmin.4', 'F_CTmin.8', 'p_CTmin.8', 'F_CTmax.4', 'p_CTmax.4', 'F_CTmax.8', 'p_CTmax.8')
table1 <- matrix(NA, nrow=length(file_list), ncol=length(table1_labels))
anova(fit)[, c('F value', 'Pr(>F)')]
res <- paste(anova(fit)[, c('F value', 'Pr(>F)')], ',')
res
treat_res <- paste(anova(fit)[1, c('F value', 'Pr(>F)')], ',')
treat_res
paste(anova(fit)[1, c('F value', 'Pr(>F)')], collapse=', ')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
F_value
p_value <- round(fit[1:3,'Pr(>F)'], 1)
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 1)
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
p_value
paste(F_value, p_value, collapse=', ')
res <- paste(F_value, p_value, sep=', ')
res
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
res <- paste(F_value, "(", p_value, ")", sep='')
res
F_value <- round(fit[1:3,'F value'], 1)
p_value <- as.character(round(fit[1:3,'Pr(>F)'], 3))
res <- paste(F_value, " (", p_value, ")", sep='')
res
p_value
round(fit[1:3,'Pr(>F)'], 3)
as.character(round(fit[1:3,'Pr(>F)'], 3))
character(round(fit[1:3,'Pr(>F)'], 3))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
p_value[p_value==0] <- "< 0.001"
p_value
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (", p_value, ")", sep='')
res
table1 <- data.table(NULL)
table1 <- cbind(table1, res)
table1 <- NA
table1 <- cbind(table1, res)
table1
print(table1)
file_list
table1 <- data.frame(nrow=3, ncol=length(file_list))
table1
table1 <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
table1
which(fn %in% file_list)
fn
file_list
which(fn==file_list)
j <- which(fn==file_list)
table1[, j] <- res
table1
substr(file_list,1,5)
file_list
paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1_labels <- paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1.typeI <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
colnames(table1.typeI) <- table1_labels
table1.typeIII <- copy(table1.typeI)
for(fn in file_list){
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){ # rename the response column and remove outliers
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (", p_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
}
table1.typeI
fit
rep(fit['Residuals', 'DF'], 3)
rep(fit['Residuals', 'Df'], 3)
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
res
table1_labels <- paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1.typeI <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
colnames(table1.typeI) <- table1_labels
table1.typeIII <- copy(table1.typeI)
for(fn in file_list){
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){ # rename the response column and remove outliers
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
}
table1.typeI
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
fit
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit3 <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
fig3
fit3
round(fit3[2:4,'F value'], 1)
table1_labels <- paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1.typeI <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
colnames(table1.typeI) <- table1_labels
table1.typeIII <- copy(table1.typeI)
for(fn in file_list){
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){ # rename the response column and remove outliers
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit3 <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
F_value <- round(fit3[2:4,'F value'], 1)
p_value <- round(fit3[2:4,'Pr(>F)'], 3)
df_value <- rep(fit3['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
table1.typeIII[, j] <- res
}
table1.typeI
table1.typeIII
# file_list <- c('CTmin_9d_8_23.csv',
#            'CTmin_9d_8_19.csv',
#            'CTmax_9d_8_23.csv',
#            'CTmax_9d_8_19.csv',
#            'CTmin_9d_4_23.csv',
#            'CTmin_9d_4_19.csv',
#            'CTmax_9d_4_23.csv',
#            'CTmax_9d_4_19.csv',
#            'CTmin_5d_8_23.csv',
#            'CTmin_5d_8_19.csv',
#            'CTmax_5d_8_23.csv',
#            'CTmax_5d_8_19.csv',
#            'CTmin_5d_4_19,23.csv',
#            'CTmax_5d_4_19,23.csv',
#            'CTmin_2d_8_19,23.csv',
#            'CTmin_2d_4_19,23.csv',
#            'CTmax_2d_8_19,23.csv',
#            'CTmax_2d_4_19,23.csv')
file_list <- c(
'CTmin_2d_4_19,23.csv',
'CTmin_2d_8_19,23.csv',
'CTmax_2d_4_19,23.csv',
'CTmax_2d_8_19,23.csv'
)
# Occasional outliers exceeding 2.2 times the interquartile range were removed
outlier.removal <- function(x){
q1 <- quantile(x, .25, na.rm=TRUE) # quartile 1
q3 <- quantile(x, .75, na.rm=TRUE) # quartile 3
iqr <- q3 - q1 # interquartile range
min <- q1 - (iqr*2.2) # remove any observation less than this
max <- q3 + (iqr*2.2) # remove any observation greater than this
x.out <- ifelse(x < min | x > max, NA, x)
return(x.out)
}
table1_labels <- paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1.typeI <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
colnames(table1.typeI) <- table1_labels
table1.typeIII <- copy(table1.typeI)
for(fn in file_list){
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){ # rename the response column and remove outliers
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit3 <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
F_value <- round(fit3[2:4,'F value'], 1)
p_value <- round(fit3[2:4,'Pr(>F)'], 3)
df_value <- rep(fit3['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
table1.typeIII[, j] <- res
kable(table1.typeI)
}
# file_list <- c('CTmin_9d_8_23.csv',
#            'CTmin_9d_8_19.csv',
#            'CTmax_9d_8_23.csv',
#            'CTmax_9d_8_19.csv',
#            'CTmin_9d_4_23.csv',
#            'CTmin_9d_4_19.csv',
#            'CTmax_9d_4_23.csv',
#            'CTmax_9d_4_19.csv',
#            'CTmin_5d_8_23.csv',
#            'CTmin_5d_8_19.csv',
#            'CTmax_5d_8_23.csv',
#            'CTmax_5d_8_19.csv',
#            'CTmin_5d_4_19,23.csv',
#            'CTmax_5d_4_19,23.csv',
#            'CTmin_2d_8_19,23.csv',
#            'CTmin_2d_4_19,23.csv',
#            'CTmax_2d_8_19,23.csv',
#            'CTmax_2d_4_19,23.csv')
file_list <- c(
'CTmin_2d_4_19,23.csv',
'CTmin_2d_8_19,23.csv',
'CTmax_2d_4_19,23.csv',
'CTmax_2d_8_19,23.csv'
)
# Occasional outliers exceeding 2.2 times the interquartile range were removed
outlier.removal <- function(x){
q1 <- quantile(x, .25, na.rm=TRUE) # quartile 1
q3 <- quantile(x, .75, na.rm=TRUE) # quartile 3
iqr <- q3 - q1 # interquartile range
min <- q1 - (iqr*2.2) # remove any observation less than this
max <- q3 + (iqr*2.2) # remove any observation greater than this
x.out <- ifelse(x < min | x > max, NA, x)
return(x.out)
}
table1_labels <- paste(substr(file_list,1,5), substr(file_list,10,10), sep='±')
table1.typeI <- data.frame(matrix(NA,nrow=3, ncol=length(file_list)))
colnames(table1.typeI) <- table1_labels
table1.typeIII <- copy(table1.typeI)
for(fn in file_list){
file_path <- paste(base_path, folder, fn, sep='/')
fly <- fread(file_path)
if(substr(fn,1,5)=='CTmin'){ # rename the response column and remove outliers
fly[, CT:=outlier.removal(ctmin), by=.(dev.treat, dev.temp)]
}else{
fly[, CT:=outlier.removal(ctmax)]
}
form <- formula('CT ~ dev.treat*dev.temp')
fit <- anova(lm(form, data=fly))
F_value <- round(fit[1:3,'F value'], 1)
p_value <- round(fit[1:3,'Pr(>F)'], 3)
df_value <- rep(fit['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
j <- which(fn==file_list)
table1.typeI[, j] <- res
options(contrasts=c(unordered="contr.sum", ordered="contr.poly"))
fit3 <- Anova(lm(form, data=fly), type='III')
options(contrasts=c(unordered="contr.treatment", ordered="contr.poly"))
F_value <- round(fit3[2:4,'F value'], 1)
p_value <- round(fit3[2:4,'Pr(>F)'], 3)
df_value <- rep(fit3['Residuals', 'Df'], 3)
p_value[p_value==0] <- "<0.001"
res <- paste(F_value, " (p=", p_value, ", ddf=", df_value, ")", sep='')
table1.typeIII[, j] <- res
}
kable(table1.typeI)
kable(table1.typeIII)
blogdown:::serve_site()
