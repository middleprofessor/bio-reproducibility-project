tableR1 <- tableR1[, .SD, .SDcols=c("Df", "ddf", "F value", "Pr(>F)")]
# add chamber ID, this assumes chamber order is maintained
dissolution[, chamber:=paste(treatment, rep(1:3), sep="-")]
nh4.rmaov <- aov(log(NH4.no0) ~ treatment*hours + Error(chamber), data=dissolution)
srp.rmaov <- aov(log(SRP.no0) ~ treatment*hours + Error(chamber), data=dissolution)
doc.rmaov <- aov(log(DOC.no0) ~ treatment*hours + Error(chamber), data=dissolution)
nh4 <- summary(nh4.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
srp <- summary(srp.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
doc <- summary(srp.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
nh4_ddf <- summary(nh4.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
srp_ddf <- summary(srp.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
doc_ddf <- summary(srp.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
tableR1 <- data.table(rbind(nh4, srp, doc), ddf=c(nh4_ddf, srp_ddf, doc_ddf))
tableR1 <- tableR1[, .SD, .SDcols=c("Df", "ddf", "F value", "Pr(>F)")]
knitr::kable(tableR1, digits=c(0,0,2,4))
# add chamber ID, this assumes chamber order is maintained
dissolution[, chamber:=paste(treatment, rep(1:3), sep="-")]
nh4.rmaov <- aov(log(NH4.no0) ~ treatment*hours + Error(chamber), data=dissolution)
srp.rmaov <- aov(log(SRP.no0) ~ treatment*hours + Error(chamber), data=dissolution)
doc.rmaov <- aov(log(DOC.no0) ~ treatment*hours + Error(chamber), data=dissolution)
nh4 <- summary(nh4.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
srp <- summary(srp.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
doc <- summary(doc.rmaov)$"Error: chamber"[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
nh4_ddf <- summary(nh4.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
srp_ddf <- summary(srp.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
doc_ddf <- summary(doc.rmaov)$"Error: chamber"[[1]]["Residuals",c("Df")]
tableR1 <- data.table(rbind(nh4, srp, doc), ddf=c(nh4_ddf, srp_ddf, doc_ddf))
tableR1 <- tableR1[, .SD, .SDcols=c("Df", "ddf", "F value", "Pr(>F)")]
tableR1
tableR1
nh4.fit <- lm(log(NH4.no0) ~ treatment*hours, data=dissolution)
srp.fit <- lm(log(SRP.no0) ~ treatment*hours, data=dissolution)
doc.fit <- lm(log(DOC.no0) ~ treatment*hours, data=dissolution)
nh4.aov <- aov(nh4.fit)
srp.aov <- aov(srp.fit)
doc.aov <- aov(doc.fit)
nh4.aov
summary(nh4.aov)
anova(nh4.fit)
summary(nh4.rmaov)["treatment",c("Df", "F value", "Pr(>F)")]
summary(nh4.aov)["treatment",c("Df", "F value", "Pr(>F)")]
summary(nh4.aov)[[1]]["treatment",c("Df", "F value", "Pr(>F)")]
summary(nh4.aov)[[1]]
dim(summary(nh4.aov)[[1]])
names(summary(nh4.aov))
summary(nh4.aov)
dim(summary(nh4.aov))
summary(nh4.aov)[[1]]["treatment", ]
data.table(summary(nh4.aov))
data.table(summary(nh4.aov)[[1]])
(summary(nh4.aov)[[1]])["treatment", ]
(summary(nh4.aov)[[1]])[, c("Df", "F value", "Pr(>F)")]
row.names((summary(nh4.aov)[[1]])[, c("Df", "F value", "Pr(>F)")])
summary(nh4.aov)[[1]]["treatment      ", c("Df", "F value", "Pr(>F)")]
summary(nh4.aov)[[1]]["Residuals      ",c("Df")]
knitr::kable(tableR1, digits=c(0,0,2,4)
knitr::kable(tableR1, digits=c(0,0,2,4))
# add chamber ID, this assumes chamber order is maintained
dissolution[, chamber:=paste(treatment, rep(1:3), sep="-")]
summary(aov(log(NH4.no0) ~ treatment*hours + Error(chamber), data=dissolution))
summary(aov(log(SRP.no0) ~ treatment*hours + Error(chamber), data=dissolution))
summary(aov(log(DOC.no0) ~ treatment*hours + Error(chamber), data=dissolution))
# add chamber ID, this assumes chamber order is maintained
dissolution[, chamber:=paste(treatment, rep(1:3), sep="-")]
summary(aov(log(NH4.no0) ~ treatment*hours + Error(chamber), data=dissolution))$"Error: chamber"
summary(aov(log(SRP.no0) ~ treatment*hours + Error(chamber), data=dissolution))
summary(aov(log(DOC.no0) ~ treatment*hours + Error(chamber), data=dissolution))
# add chamber ID, this assumes chamber order is maintained
dissolution[, chamber:=paste(treatment, rep(1:3), sep="-")]
summary(aov(log(NH4.no0) ~ treatment*hours + Error(chamber), data=dissolution))$"Error: chamber"
summary(aov(log(SRP.no0) ~ treatment*hours + Error(chamber), data=dissolution))$"Error: chamber"
summary(aov(log(DOC.no0) ~ treatment*hours + Error(chamber), data=dissolution))$"Error: chamber"
nh4.fit <- lm(log(NH4.no0) ~ treatment*hours, data=dissolution)
srp.fit <- lm(log(SRP.no0) ~ treatment*hours, data=dissolution)
doc.fit <- lm(log(DOC.no0) ~ treatment*hours, data=dissolution)
summary(aov(nh4.fit))
summary(aov(srp.fit))
summary(aov(doc.fit))
nh4.emm <- emmeans(nh4.fit, specs="treatment")
contrast(nh4.emm, method="revpairwise", adjust="holm") # caution! ignores interaction
names(dissolution)
names(dissolution)
fit <- lme(NH4.no0 ~ treatment*hours, random = ~1|chamber, data=dissolution)
fit <- lme(NH4.no0 ~ treatment*hours, random = ~1|chamber, data=dissolution)
contrast(emmeans(fit, specs="treatment"), method="revpairwise", adjust="holm")
nh4.emm <- emmeans(nh4.fit, specs="treatment")
contrast(nh4.emm, method="revpairwise", adjust="holm") # caution! ignores interaction
fit <- lme(NH4.no0 ~ treatment*hours, random = ~1|chamber, data=dissolution)
contrast(emmeans(fit, specs="treatment"), method="revpairwise", adjust="holm")
nh4.fit <- lm(log(NH4.no0) ~ treatment*hours, data=dissolution)
srp.fit <- lm(log(SRP.no0) ~ treatment*hours, data=dissolution)
doc.fit <- lm(log(DOC.no0) ~ treatment*hours, data=dissolution)
do.fit <- lm(log(DO) ~ treatment*hours, data=dissolution)
summary(aov(nh4.fit))
summary(aov(srp.fit))
summary(aov(doc.fit))
summary(aov(do.fit))
pairwise.t.test(x=log(dissolution$DO), g=dissolution$treatment, p.adjust.method="holm")
n <- "Subalusky_2018_mara_hippo_feces_decomp_litterbags.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
decomp <- fread(file_path)
head(decomp)
# decomposition rates
fn <- "Subalusky_2018_mara_hippo_feces_decomp_litterbags.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
decomp <- fread(file_path)
decomp[, treatment:=factor(treatment, c("H 1", "H 5", "H 20", "W", "HW"))]
fn <- "Subalusky_2018_mara_hippo_feces_decomp_litterbags.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
decomp <- fread(file_path)
decomp[, treatment:=factor(treatment, c("H 1", "H 5", "H 20", "W", "HW"))]
head(decomp)
decomp <- fread(file_path)
head(decomp)
decomp
# treatment	=	experimental treatment, where A: 40 g fresh hippo feces; B: 10 g aged hippo feces; C: 10 g aged hippo feces + 20 g wildebeest tissue
decoomp[, treatment_recode=ifelse(treatment=="A", "fresh",
ifelse(treatment=="B", "aged", "wb"))]
# treatment	=	experimental treatment, where A: 40 g fresh hippo feces; B: 10 g aged hippo feces; C: 10 g aged hippo feces + 20 g wildebeest tissue
decomp[, treatment_recode=ifelse(treatment=="A", "fresh",
ifelse(treatment=="B", "aged", "wb"))]
# treatment	=	experimental treatment, where A: 40 g fresh hippo feces; B: 10 g aged hippo feces; C: 10 g aged hippo feces + 20 g wildebeest tissue
decomp[, treatment_recode:=ifelse(treatment=="A", "fresh",
ifelse(treatment=="B", "aged", "wb"))]
decomp[, treatment:=factor(treatment, c("fresh", "aged", "wb"))]
head(decomp)
source("../R/clean_label.R") # bookdown
decomp <- fread(file_path)
colnames(decomp) <- clean_label(colnames(decomp))
decomp[, treatment_recode:=ifelse(treatment=="A", "fresh",
ifelse(treatment=="B", "aged", "wb"))]
decomp[, treatment:=factor(treatment, c("fresh", "aged", "wb"))]
head(decomp)
fn <- "Subalusky_2018_mara_hippo_feces_decomp_litterbags.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
decomp <- fread(file_path)
colnames(decomp) <- clean_label(colnames(decomp))
# treatment	=	experimental treatment, where A: 40 g fresh hippo feces; B: 10 g aged hippo feces; C: 10 g aged hippo feces + 20 g wildebeest tissue
decomp[, treatment_recode:=ifelse(treatment=="A", "fresh",
ifelse(treatment=="B", "aged", "wb"))]
decomp[, treatment_recode:=factor(treatment_recode, c("fresh", "aged", "wb"))]
head(decomp)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
anova(hippo_post)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
anova(hippo_post)
hippo_post <- lm(adj_hippo_prop_rem ~ treatment_recode*days, data=decomp)
anova(hippo_post)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
anova(hippo_post)
hippo_post <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
anova(hippo_post)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
anova(hippo_post)
names(decomp)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
summary(aov(hippo_post))
decomp$hippo_prop_rem
decomp[, my_log_hippo_prop_remain:=log(hippo_prop_rem)]
head(decomp)
decomp[, my_ln_hippo_prop_rem:=log(ln_hippo_prop_rem)]
head(decomp)
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
summary(aov(hippo_post))
head(decomp)
log(1)
decomp[, my_ln_hippo_prop_rem:=log(adj_hippo_prop_rem)]
head(decomp[, .SD, .SDcols=c("ln_hippo_prop_rem", "my_ln_hippo_prop_rem")])
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
summary(aov(hippo_post))
decomp[, my_ln_hippo_prop_rem:=log(adj_hippo_prop_rem)]
head(decomp[, .SD, .SDcols=c("ln_hippo_prop_rem", "my_ln_hippo_prop_rem")])
hippo_post <- lm(hippo_post ~ treatment_recode*days, data=decomp)
summary(aov(hippo_post))
plot(hippo_post)
decomp[, my_ln_hippo_prop_rem:=log(adj_hippo_prop_rem)]
head(decomp[, .SD, .SDcols=c("ln_hippo_prop_rem", "my_ln_hippo_prop_rem")])
hippo_post <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
summary(aov(hippo_post))
decomp[, my_ln_hippo_prop_rem:=log(adj_hippo_prop_rem)]
head(decomp[, .SD, .SDcols=c("ln_hippo_prop_rem", "my_ln_hippo_prop_rem")])
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ days, data=decomp[treatment_recode!="wb"])
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp[treatment_recode!="wb"])
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp[treatment_recode!="wb"])
coef(summary(fit))
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp[treatment_recode!="wb"])
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp[treatment_recode!="aged"])
summary(aov(fit))
fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp[treatment_recode!="fresh"])
summary(aov(fit))
decomp[, my_ln_hippo_prop_rem:=log(adj_hippo_prop_rem)]
head(decomp[, .SD, .SDcols=c("ln_hippo_prop_rem", "my_ln_hippo_prop_rem")])
ln_hippo_prop_rem.fit <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
summary(aov(ln_hippo_prop_rem.fit))
ln_hippo_prop_rem.emm <- emmeans(ln_hippo_prop_rem.fit, specs=c("treatment_recode", "days"))
ln_hippo_prop_rem.emm
ln_hippo_prop_rem.emm <- emmeans(ln_hippo_prop_rem.fit, specs=c("treatment_recode", "days"))
contrast(ln_hippo_prop_rem.emm, method="revpairwise")
emtrends(fit, pairwise ~ treatment_recode)
emtrends(fit, pairwise ~ treatment_recode, var = "days")
#emtrends(fiber.lm, pairwise ~ machine, var = "diameter")
emtrends(ln_hippo_prop_rem.fit, pairwise ~ treatment_recode, var = "days")
#emtrends(fiber.lm, pairwise ~ machine, var = "diameter")
emtrends(ln_hippo_prop_rem.fit, pairwise ~ treatment_recode, var = "days", adjust="none")
names(decomp)
m1 <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
emtrends(m1, pairwise ~ treatment_recode, var = "days", adjust="none")
# "none" is used because the authors compare to the bonferroni 0.05/3
# what about using a linear mixed model with arcsin transformation?
m1 <- lm(asin(adj_hippo_pct_rem) ~ treatment_recode*days, data=decomp)
asin(.4)
asin(.8)
logit(.8)
log((.8)/(1-.8))
m1 <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
# what about using a linear mixed model with arcsin transformation?
m1 <- lm(asin(adj_hippo_pct_rem) ~ treatment_recode*days, data=decomp)
asin(decom$adj_hippo_pct_rem)
asin(decomp$adj_hippo_pct_rem)
# what about using a linear mixed model with arcsin transformation?
m1 <- lm(asin(ln_hippo_prop_rem) ~ treatment_recode*days, data=decomp)
# what about using a linear mixed model with arcsin transformation?
m1 <- lm(asin(adj_hippo_prop_rem) ~ treatment_recode*days, data=decomp)
m1 <- lm(asin(ln_hippo_prop_rem) ~ treatment_recode*days, data=decomp)
names(decomp)
asin(decomp$adj_hippo_prop_rem)
(decomp$adj_hippo_prop_rem)
head(decomp)
tail(decomp)
unique(decomp$hippo_pre)
m1 <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
emtrends(m1, pairwise ~ treatment_recode, var = "days", adjust="none")
# "none" is used because the authors compare to the bonferroni 0.05/3
# what about better models?
# fixed with arcsin transform
decomp[, adj_hippo_prop_rem_2:=ifelse(adj_hippo_prop_rem > 1, 1, adj_hippo_prop_rem)]
m1 <- lm(asin(adj_hippo_prop_rem_2) ~ treatment_recode*days, data=decomp)
emtrends(m1, pairwise ~ treatment_recode, var = "days", adjust="none")
# what about logit?
logit <- function(p){
return(log(p/(1-p)))
}
m3 <- lm(logit(adj_hippo_prop_rem_2) ~ treatment_recode*days, data=decomp)
logit(1)
head(decomp)
decomp$id
decomp
m1 <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
emtrends(m1, pairwise ~ treatment_recode, var = "days", adjust="none")
# "none" is used because the authors compare to the bonferroni 0.05/3
# what about arcsin transform?
decomp[, adj_hippo_prop_rem_2:=ifelse(adj_hippo_prop_rem > 1, 1, adj_hippo_prop_rem)]
m2 <- lm(asin(adj_hippo_prop_rem_2) ~ treatment_recode*days, data=decomp)
emtrends(m2, pairwise ~ treatment_recode, var = "days", adjust="none")
plot(m1)
plot(m2)
# original model with log transform but simulataneous pairwise comparison
m1 <- lm(ln_hippo_prop_rem ~ treatment_recode*days, data=decomp)
emtrends(m1, pairwise ~ treatment_recode, var = "days", adjust="none")
# "none" is used because the authors compare to the bonferroni 0.05/3
# what about arcsin transform?
decomp[, adj_hippo_prop_rem_2:=ifelse(adj_hippo_prop_rem > 1, 1, adj_hippo_prop_rem)]
m2 <- lm(asin(adj_hippo_prop_rem_2) ~ treatment_recode*days, data=decomp)
emtrends(m2, pairwise ~ treatment_recode, var = "days", adjust="none")
# using plot() m2 is better than m1
# what about original log transform but with corrected adj_hippo_prop_rem?
m1b <- lm(log(adj_hippo_prop_rem_2) ~ treatment_recode*days, data=decomp)
emtrends(m1b, pairwise ~ treatment_recode, var = "days", adjust="none")
?pairwise.t.test
pairwise.t.test(x=log(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd)
pairwise.t.test(x=log(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
pairwise.t.test(x=log(dissolution$SRP.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
pairwise.t.test(x=log(dissolution$DOC.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
nh4.emm <- emmeans(nh4.fit, specs="treatment")
contrast(nh4.emm, method="revpairwise", adjust="holm") # caution! ignores interaction
pairwise.t.test(x=log(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=TRUE)
pairwise.t.test(x=log(dissolution$SRP.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=TRUE)
pairwise.t.test(x=log(dissolution$DOC.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=TRUE)
pairwise.t.test(x=log(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
pairwise.t.test(x=log(dissolution$SRP.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
pairwise.t.test(x=log(dissolution$DOC.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
names(dissolution)
pairwise.t.test(x=(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=TRUE)
pairwise.t.test(x=(dissolution$NH4.no0), g=dissolution$treatment, p.adjust.method="holm", pool.sd=FALSE)
levels(dissolution$treatment)
t.test(log(NH4.no0) ~ treatment, data=dissolution[treatment=="H 1"|treatment=="H 1"])
t.test(log(NH4.no0) ~ treatment, data=dissolution[treatment=="H 1"|treatment=="H 5"])
p[1] <- t.test(log(NH4.no0) ~ treatment, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
names(t.test(log(NH4.no0) ~ treatment, data=dissolution[treatment=="H 1"|treatment=="H 5"]))
p_values <- numeric(5*4/2)
p_values[1] <- t.test(log(NH4.no0) ~ treatment, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values
?t.test
p_values <- numeric(5*4/2)
var_equal <- FALSE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
p_values <- numeric(5*4/2)
var_equal <- TRUE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
?pairwise.t.test
p_values <- numeric(5*4/2)
var_equal <- FALSE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
p_values <- numeric(5*4/2)
var_equal <- FALSE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
p_values <- numeric(5*4/2)
var_equal <- TRUE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
p_values <- numeric(5*4/2)
var_equal <- FALSE
p_values[1] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 5"])$p.value
p_values[2] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="H 20"])$p.value
p_values[3] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="W"])$p.value
p_values[4] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 1"|treatment=="HW"])$p.value
p_values[5] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="H 20"])$p.value
p_values[6] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="W"])$p.value
p_values[7] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 5"|treatment=="HW"])$p.value
p_values[8] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="W"])$p.value
p_values[9] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="H 20"|treatment=="HW"])$p.value
p_values[10] <- t.test(log(NH4.no0) ~ treatment, var.equal=var_equal, data=dissolution[treatment=="W"|treatment=="HW"])$p.value
p.adjust(p_values, "holm")
fn <- "Subalusky_2018_mara_nutrient_limitation_assays.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
limit <- fread(file_path)
head(limit)
R_11.fit <- lm(CR.corr.no0 ~ treatment*site, data=limit[year=="2011"])
CR.corr.no0
R_11.fit <- lm(CR.corr.no0 ~ treatment*site, data=limit[year=="2011"])
aov(R_11.fit)
R_11.fit <- lm(CR.corr.no0 ~ treatment*site, data=limit[year=="2011"])
summary(aov(R_11.fit))
unique(limit$site)
unique(limit$substrate)
# heterotrophic: substrate = "Sponge"
R_11.fit <- lm(sqrt(CR.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(R_11.fit))
# heterotrophic: substrate = "Sponge"
R_hetero_Y11.fit <- lm(sqrt(CR.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(R_hetero_Y11.fit))
R_hetero_Y13.fit <- lm(sqrt(CR.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(R_hetero_Y13.fit))
unique(limit$site)
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(R_hetero_Y11.fit))
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(m1))
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site="Site 1"])
head(limit)
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 1"])
summary(aov(m1))
TukeyHSD(m1)
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 1"])
summary(aov(m1))
TukeyHSD(aov(m1))
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
# nutrients added to agar cup; Ctl: control, C: carbon (only measured in 2013), H: ammonium, N: nitrate, P: phosphate, HP: ammonium + phosphate, NP: nitrate + phosphate
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 1"])
summary(aov(m1))
TukeyHSD(aov(m1))$treatment[c("HP-Ctl", "NP-Ctl"),]
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
# nutrients added to agar cup; Ctl: control, C: carbon (only measured in 2013), H: ammonium, N: nitrate, P: phosphate, HP: ammonium + phosphate, NP: nitrate + phosphate
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 1"])
summary(aov(m1))
TukeyHSD(aov(m1))$treatment[c("HP-Ctl", "NP-Ctl"),]
TukeyHSD(aov(m1))$treatment[,]
# site key: Site 1="no wildlife", Site 2="Hippo", Site 3="Hippo + wildebeast"
# nutrients added to agar cup; Ctl: control, C: carbon (only measured in 2013), H: ammonium, N: nitrate, P: phosphate, HP: ammonium + phosphate, NP: nitrate + phosphate
m1 <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 1"])
summary(aov(m1))
TukeyHSD(aov(m1))$treatment[c("HP-Ctl", "NP-Ctl"),]
TukeyHSD(aov(m1))$treatment[c("H-Ctl", "N-Ctl", "P-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2013" & substrate=="Sponge" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("HP-Ctl", "NP-Ctl"),]
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "N-Ctl", "P-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2013" & substrate=="Sponge" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "HP-Ctl", "P-Ctl"),]
TukeyHSD(aov(fit))$treatment[c("N-Ctl", "NP-Ctl"),]
TukeyHSD(aov(fit))$treatment
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2013" & substrate=="Sponge" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("Ctl-C", "HP-Ctl", "P-Ctl"),]
TukeyHSD(aov(fit))$treatment[c("N-Ctl", "NP-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 2"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("Ctl-C", "HP-Ctl", "P-Ctl"),]
TukeyHSD(aov(fit))$treatment
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 2"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 2"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2013" & substrate=="Sponge" & site=="Site 2"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Sponge" & site=="Site 3"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
fit <- lm(sqrt(CR.corr.no0) ~ treatment, data=limit[year=="2013" & substrate=="Sponge" & site=="Site 3"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
head(limit)
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(R_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(R_hetero_Y13.fit))
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y13.fit))
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011"])
summary(aov(Chlor_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y13.fit))
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y13.fit))
unique(limit$substrate)
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Glass"])
summary(aov(Chlor_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Sponge"])
summary(aov(Chlor_hetero_Y13.fit))
Chlor_hetero_Y11.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2011" & substrate=="Glass"])
summary(aov(Chlor_hetero_Y11.fit))
Chlor_hetero_Y13.fit <- lm(sqrt(Chl.corr.no0) ~ treatment*site, data=limit[year=="2013" & substrate=="Glass"])
summary(aov(Chlor_hetero_Y13.fit))
fit <- lm(sqrt(Chl.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Glass" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))
fit <- lm(sqrt(Chl.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Glass" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))
fit <- lm(sqrt(Chl.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Glass" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment["H-Ctl",]
fit <- lm(sqrt(Chl.corr.no0) ~ treatment, data=limit[year=="2011" & substrate=="Glass" & site=="Site 1"])
summary(aov(fit))
TukeyHSD(aov(fit))$treatment[c("H-Ctl", "P-Ctl", "N-Ctl", "HP-Ctl", "NP-Ctl"),]
fn <- "Subalusky_2018_mara_river_biofilm_summary_data.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
ecosystem <- fread(file_path)
head(ecosystem)
fn <- "Subalusky_2018_mara_experimental_stream_tiles.csv"
file_path <- paste(data_folder, folder, fn, sep="/")
ecosystem <- fread(file_path)
head(ecosystem)
?lme
